{"version":3,"sources":["webpack:///30.a36ce8c6c29e1b49e039.chunk.js","webpack:///./app/cb-utils/allRequiredSettingsForPluginHaveData.ts","webpack:///./app/cb-utils/groupOptions.tsx","webpack:///./app/components/CbPluginSettingEditor/index.tsx","webpack:///./app/components/CbDatasourceAggregatorList/index.tsx","webpack:///./app/components/DatasourceSettingsModal/messages.ts","webpack:///./app/components/DatasourceImportConfirmationModal/messages.ts","webpack:///./app/components/DatasourceImportConfirmationModal/index.tsx","webpack:///./app/components/LatestDataForDatasource/messages.ts","webpack:///./app/components/LatestDataForDatasource/index.tsx","webpack:///./app/components/DatasourceSettingsModal/index.tsx","webpack:///./app/components/ExportPluginButton/index.tsx","webpack:///./app/components/FlexModalHeader/index.tsx","webpack:///./app/components/ImportExportHelp/index.tsx","webpack:///./app/components/ImportPluginButton/index.tsx","webpack:///./app/containers/Console/messages.ts"],"names":["webpackJsonp","./app/cb-utils/allRequiredSettingsForPluginHaveData.ts","module","__webpack_exports__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0_utils_types__","allRequiredSettingsForPluginHaveData","settings","values","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","setting","value","settingValue","name","type","MULTI_OBJECT_SETTING_TYPE","objectShape","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","def","j","settingValueLen","length","required","err","return","./app/cb-utils/groupOptions.tsx","_toConsumableArray","arr","Array","isArray","i","arr2","from","d","groupAndFlatten","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_lodash_groupBy__","__WEBPACK_IMPORTED_MODULE_1_lodash_groupBy___default","types","groups","group","Object","keys","sort","a","b","reduce","acc","push","apply","display_name","disabled","concat","groupOptions","map","val","createElement","key","data-test","type_name","title","description","./app/components/CbPluginSettingEditor/index.tsx","__WEBPACK_IMPORTED_MODULE_1_components_CbInputField__","__WEBPACK_IMPORTED_MODULE_2_components_MultiObjectSettingEditor__","__WEBPACK_IMPORTED_MODULE_3_containers_Portal_constants__","CbPluginSettingEditor","props","assign","labelText","./app/components/DatasourceSettingsModal/index.tsx","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","LatestDataForDatasource__classCallCheck","LatestDataForDatasource__possibleConstructorReturn","LatestDataForDatasource__inherits","_defineProperty","obj","defineProperty","DatasourceSettingsModal__classCallCheck","DatasourceSettingsModal__possibleConstructorReturn","DatasourceSettingsModal__inherits","react","react_default","reactstrap_es","_extends","target","arguments","source","hasOwnProperty","_createClass","defineProperties","descriptor","protoProps","staticProps","CbDatasourceAggregatorList_CbDatasourceAggregatorList","_React$Component","CbDatasourceAggregatorList","this","_this","getPrototypeOf","state","list","handleDatasourceAdd","newId","options","id","newList","setState","onChange","renderList","renderSelectBox","onClick","el","row","sm","handleDatasourceChange","bind","renderDatasourceOption","renderDeleteButton","handleDatasourceDelete","idx","e","slice","Component","components_CbDatasourceAggregatorList","constants","PortalModel","datasources_types","FlexModalHeader","ExportPluginButton","ImportPluginButton","index_es","messages","exportDatasource","defaultMessage","importDatasource","importDatasourceSuccess","importDatasourceError","importDatasourceHelp","exportDatasourceHelp","utils","DatasourceImportConfirmationModal_messages","mainText","subText","replaceBtnText","createBtnText","Console_messages","DatasourceImportConfirmationModal_DatasourceImportConfirmationModal","isOpen","color","onCreate","data-cy","onReplace","onCancel","cancel","components_DatasourceImportConfirmationModal","v4","v4_default","Tabs","styled_components_browser_esm","CbCodeEditor","LatestDataForDatasource_messages","never","_typeof","LatestDataForDatasource__extends","LatestDataForDatasource__createClass","portalModel","getInstance","Wrapper","div","withConfig","displayName","LatestDataForDatasource_LatestDataForDatasource","LatestDataForDatasource","handleUpdate","pickStateFromModel","datasourceInstance","getDatasourceInstanceById","latestData","subscribe","unsubscribe","data","isDataOfTypeObject","date","Fragment","style","textAlign","language","JSON","stringify","wrappingId","sideBarWidth","className","model","lastUpdated","toLocaleString","components_LatestDataForDatasource","DatasourceSettingsModal__extends","DatasourceSettingsModal__createClass","DatasourceSettingsModal_portalModel","DatasourceSettingsModal_DatasourceSettingsModal","DatasourceSettingsModal","importedDatasource","isImport","importShouldCreateNewDatasource","datasourceType","MESSAGE_TOPIC","currentTab","tab","datasourceTypes","getDatasourceTypes","datasourceInstances","getDatasourceInstances","renderSettings","exportObj","btnText","plugin","fileName","helpInfo","shapeChecker","onComplete","handleImport","successMsg","intl","formatMessage","badShapeMsg","placeholder","autoFocus","_onSettingChange","_onTypeChange","_renderDatasourceTypes","fontSize","_renderCustomProps","onDismiss","_onSubmit","_isFormComplete","renderTabs","component","renderDataView","ds","hasDatasourceWithId","setImportValues","handleCreateFromImport","handleReplaceFromImport","handleCancelFromImport","_handleAggregatorListChange","datasources","_setDefaultValuesForSettings","_onDatasourcePropChange","preventDefault","rtn","onClose","settingsForType","datasourceSettings","forEach","default_value","_getAggregatorOptions","_getAggregatorList","size","DATASOURCE_AGGREGATOR","_this2","toggle","onSubmit","tabs","selectNewTab","setTimeout","window","dispatchEvent","Event","./app/components/ExportPluginButton/index.tsx","__WEBPACK_IMPORTED_MODULE_1__Icons__","__WEBPACK_IMPORTED_MODULE_2_react_intl__","__WEBPACK_IMPORTED_MODULE_3__ImportExportHelp__","_React$PureComponent","_props","bodyText","href","encodeURIComponent","download","PureComponent","./app/components/FlexModalHeader/index.tsx","__WEBPACK_IMPORTED_MODULE_0_styled_components__","__WEBPACK_IMPORTED_MODULE_1_reactstrap__","./app/components/ImportExportHelp/index.tsx","__WEBPACK_IMPORTED_MODULE_2_components_HelpPrimitive__","__WEBPACK_IMPORTED_MODULE_3_styled_components__","LabelWrap","ImportExportHelp","./app/components/ImportPluginButton/index.tsx","__WEBPACK_IMPORTED_MODULE_3_react_redux__","__WEBPACK_IMPORTED_MODULE_4_containers_Portal_actions__","__WEBPACK_IMPORTED_MODULE_5__ImportExportHelp__","fileInput","importPlugin","file","files","r","FileReader","onload","theFile","contents","parse","result","Error","onImportSuccess","onImportError","message","readAsText","hidden","accept","ref","_ref","mapDispatchToProps","dispatch","msg","./app/containers/Console/messages.ts","__WEBPACK_IMPORTED_MODULE_0_react_intl__","mess","header","deploy","sync","assetClassCode","assetClassServices","assetClassPortals","assetClassLibraries","assetClassTriggers","assetClassTimers","assetClassRoles","assetClassAdapters","assetClassPlugins","assetClassUsers","assetClassDevices","assetClassCollections","assetClassDeployments","assetClassEdges","assetClassMessageHistory","assetClassSystems","assetClassMessages","messageTopics","readPermission","createPermission","updatePermission","deletePermission","runPermission","subscribePermission","publishPermission","allPermissions","architecture","discardChanges","saveAndExit","errorNameRequired","errorSpaces","errorSpecialCharacters","about","advanced","close","summary","ipmImportError"],"mappings":"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CA,SAAU1V,EAAQC,EAAqBC,GAE7C,Yeh+BG,IAAAyV,GAAAzV,EAAA,6CAGO0V,EAAAtS,OAAAqS,EAAA,IACFE,QACFrN,GAAiC,gCACrB6B,eACf,+BACKyL,QACFtN,GAAiC,gCACrB6B,eACf,UACG0L,MACAvN,GAA+B,8BACnB6B,eACf,QACa2L,gBACVxN,GAAwD,uDAC5C6B,eACf,QACiB4L,oBACdzN,GAA4D,2DAChD6B,eACf,YACgB6L,mBACb1N,GAA2D,0DAC/C6B,eACf,WACkB8L,qBACf3N,GAA6D,4DACjD6B,eACf,aACiB+L,oBACd5N,GAA4D,2DAChD6B,eACf,YACegM,kBACZ7N,GAA0D,yDAC9C6B,eACf,UACciM,iBACX9N,GAAyD,wDAC7C6B,eACf,SACiBkM,oBACd/N,GAA4D,2DAChD6B,eACf,YACgBmM,mBACbhO,GAA2D,0DAC/C6B,eACf,WACcoM,iBACXjO,GAAyD,wDAC7C6B,eACf,SACgBqM,mBACblO,GAA2D,0DAC/C6B,eACf,WACoBsM,uBACjBnO,GAA+D,8DACnD6B,eACf,eACoBuM,uBACjBpO,GAA+D,8DACnD6B,eACf,eACcwM,iBACXrO,GAAyD,wDAC7C6B,eACf,SACuByM,0BACpBtO,GAAkE,iEACtD6B,eACf,mBACgB0M,mBACbvO,GAA2D,0DAC/C6B,eACf,WACiB2M,oBACdxO,GAAwC,uCAC5B6B,eACf,YACY4M,eACTzO,GAA+C,8CACnC6B,eACf,kBACa6M,gBACV1O,GAA6C,4CACjC6B,eACf,QACe8M,kBACZ3O,GAA+C,8CACnC6B,eACf,UACe+M,kBACZ5O,GAA+C,8CACnC6B,eACf,UACegN,kBACZ7O,GAA+C,8CACnC6B,eACf,UACYiN,eACT9O,GAA4C,2CAChC6B,eACf,OACkBkN,qBACf/O,GAAkD,iDACtC6B,eACf,aACgBmN,mBACbhP,GAAgD,+CACpC6B,eACf,WACaoN,gBACVjP,GAAyC,wCAC7B6B,eACf,OACGjJ,MACAoH,GAA+B,8BACnB6B,eACf,QACU3F,aACP8D,GAAsC,qCAC1B6B,eACf,eACWqN,cACRlP,GAA4C,2CAChC6B,eACf,gBACasN,gBACVnP,GAAyC,wCAC7B6B,eACf,mBACUuN,aACPpP,GAAsC,qCAC1B6B,eACf,iBACgBwN,mBACbrP,GAAiD,gDACrC6B,eACf,YACUyN,aACPtP,GAA2C,0CAC/B6B,eACf,sBACqB0N,wBAClBvP,GAAsD,qDAC1C6B,eACf,kCACI2N,OACDxP,GAAgC,+BACpB6B,eACf,SACO4N,UACJzP,GAAmC,kCACvB6B,eACf,YACKoB,QACFjD,GAAiC,gCACrB6B,eACf,UACI6N,OACD1P,GAAgC,+BACpB6B,eACf,SACM8N,SACH3P,GAAkC,iCACtB6B,eACf,aACa+N,gBACV5P,GAAyC,wCAC7B6B,eAEf,iBAEHpK,GAAA","file":"30.a36ce8c6c29e1b49e039.chunk.js","sourcesContent":["webpackJsonp([30],{\n\n/***/ \"./app/cb-utils/allRequiredSettingsForPluginHaveData.ts\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_utils_types__ = __webpack_require__(\"./app/utils/types.ts\");\n\nvar allRequiredSettingsForPluginHaveData = function allRequiredSettingsForPluginHaveData(settings, values) {\n    if (settings) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = settings[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var setting = _step.value;\n\n                var settingValue = values[setting.name];\n                if (setting.type === __WEBPACK_IMPORTED_MODULE_0_utils_types__[\"a\" /* SettingTypes */].MULTI_OBJECT_SETTING_TYPE) {\n                    // If the setting is a multi-object-setting, the value of the setting will be an array\n                    // containing an object representing the values for each field within a group of fields.\n                    //\n                    // [\n                    //  {\n                    //    \"dataKey\":\"uv\",\n                    //    \"fill\":\"\",\n                    //    \"yAxisId\":\"t\",\n                    //    \"legendType\":\"star\",\n                    //    \"stackId\":\"\",\n                    //    \"name\":\"\"\n                    //  }\n                    // ]\n                    // objectShape will contain an array of objects, each object containing the metadata for\n                    // a specific field\n                    var objectShape = setting.objectShape;\n                    // \"objectShape\":[\n                    //  {\n                    //    \"name\":\"dataKey\",\n                    //    \"display_name\":\"Data Key\",\n                    //    \"type\":\"dataKey\",\"required\":true\n                    //  },{\n                    //    \"name\":\"fill\",\n                    //    \"display_name\":\"Fill\",\n                    //    \"default_value\":\"\",\n                    //    \"type\":\"color\",\n                    //    \"required\":true\n                    //  },{\n                    //    \"name\":\"yAxisId\",\n                    //    \"display_name\":\"Y Axis ID\",\n                    //    \"type\":\"text\",\n                    //    \"required\":true\n                    //  },{\n                    //    \"name\":\"legendType\",\n                    //    \"display_name\":\"Legend Type\",\n                    //    \"type\":\"option\",\n                    //    \"default_value\":\"star\",\n                    //    \"options\":[\n                    //      {\n                    //        \"name\":\"line\",\n                    //        \"value\":\"line\"\n                    //      },{\n                    //        \"name\":\"square\",\n                    //        \"value\":\"square\"\n                    //      },{\n                    //        \"name\":\"rect\",\n                    //        \"value\":\"rect\"\n                    //      },{\n                    //        \"name\":\"circle\",\n                    //        \"value\":\"circle\"\n                    //      },{\n                    //        \"name\":\"cross\",\n                    //        \"value\":\"cross\"\n                    //      },{\n                    //        \"name\":\"diamond\",\n                    //        \"value\":\"diamond\"\n                    //      },{\n                    //        \"name\":\"star\",\n                    //        \"value\":\"star\"\n                    //      },{\n                    //        \"name\":\"triangle\",\n                    //        \"value\":\"triangle\"\n                    //      },{\n                    //        \"name\":\"wye\",\n                    //        \"value\":\"wye\"\n                    //      }\n                    //    ],\n                    //    \"required\":true\n                    //  },{\n                    //    \"name\":\"stackId\",\n                    //    \"display_name\":\"Stack ID\",\n                    //    \"type\":\"text\",\n                    //    \"required\":true\n                    //  },{\n                    //    \"name\":\"name\",\n                    //    \"display_name\":\"Name\",\n                    //    \"type\":\"text\",\n                    //    \"required\":true\n                    //  }\n                    // ]\n                    var _iteratorNormalCompletion2 = true;\n                    var _didIteratorError2 = false;\n                    var _iteratorError2 = undefined;\n\n                    try {\n                        for (var _iterator2 = objectShape[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                            var def = _step2.value;\n\n                            for (var j = 0, settingValueLen = settingValue.length; j < settingValueLen; j += 1) {\n                                if (def.required && (settingValue[j][def.name] === undefined || settingValue[j][def.name] === '')) {\n                                    return false;\n                                }\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError2 = true;\n                        _iteratorError2 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                                _iterator2.return();\n                            }\n                        } finally {\n                            if (_didIteratorError2) {\n                                throw _iteratorError2;\n                            }\n                        }\n                    }\n                } else {\n                    if (!!setting.required && (settingValue === undefined || settingValue === '')) {\n                        return false;\n                    }\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n    return true;\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (allRequiredSettingsForPluginHaveData);\n\n/***/ }),\n\n/***/ \"./app/cb-utils/groupOptions.tsx\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return groupAndFlatten; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(\"./node_modules/react/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_groupBy__ = __webpack_require__(\"./node_modules/lodash/groupBy.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_groupBy___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_groupBy__);\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\n\nvar groupAndFlatten = function groupAndFlatten(types) {\n    var groups = __WEBPACK_IMPORTED_MODULE_1_lodash_groupBy___default()(types, function (type) {\n        return type.group ? type.group : 'Other';\n    });\n    var sortedGroups = Object.keys(groups).sort(function (a, b) {\n        return a > b ? 1 : -1;\n    });\n    return sortedGroups.reduce(function (acc, group) {\n        acc.push.apply(acc, [{\n            name: group,\n            display_name: group,\n            disabled: true\n        }].concat(_toConsumableArray(groups[group])));\n        return acc;\n    }, []);\n};\nvar groupOptions = function groupOptions(types) {\n    var flatSortedGroups = groupAndFlatten(types);\n    return flatSortedGroups.map(function (val, i) {\n        if (val.disabled) {\n            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"option\", { key: i, disabled: true }, \"--- \", val.display_name, \" ---\");\n        } else {\n            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"option\", { key: i, \"data-test\": \"typeOption\", value: val.type_name, title: val.description || null }, val.display_name);\n        }\n    });\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (groupOptions);\n\n/***/ }),\n\n/***/ \"./app/components/CbPluginSettingEditor/index.tsx\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(\"./node_modules/react/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_components_CbInputField__ = __webpack_require__(\"./app/components/CbInputField/index.tsx\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_components_MultiObjectSettingEditor__ = __webpack_require__(\"./app/components/MultiObjectSettingEditor/index.tsx\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_containers_Portal_constants__ = __webpack_require__(\"./app/containers/Portal/constants.ts\");\n/**\n *\n * CbPluginSettingEditor\n *\n */\n\n// import styled from 'styled-components';\n\n\n\nvar CbPluginSettingEditor = function CbPluginSettingEditor(props) {\n    if (props.type === __WEBPACK_IMPORTED_MODULE_3_containers_Portal_constants__[\"O\" /* MULTI_OBJECT_SETTING_TYPE */]) {\n        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_components_MultiObjectSettingEditor__[\"c\" /* default */], Object.assign({}, props));\n    } else {\n        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_components_CbInputField__[\"a\" /* default */], Object.assign({}, props, { labelText: props.display_name }));\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (CbPluginSettingEditor);\n\n/***/ }),\n\n/***/ \"./app/components/DatasourceSettingsModal/index.tsx\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(\"./node_modules/react/index.js\");\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/reactstrap/dist/reactstrap.es.js\nvar reactstrap_es = __webpack_require__(\"./node_modules/reactstrap/dist/reactstrap.es.js\");\n\n// EXTERNAL MODULE: ./app/components/CbPluginSettingEditor/index.tsx\nvar CbPluginSettingEditor = __webpack_require__(\"./app/components/CbPluginSettingEditor/index.tsx\");\n\n// CONCATENATED MODULE: ./app/components/CbDatasourceAggregatorList/index.tsx\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * CbDatasourceAggregatorList\n *\n */\n\n\n\nvar CbDatasourceAggregatorList_CbDatasourceAggregatorList = function (_React$Component) {\n    _inherits(CbDatasourceAggregatorList, _React$Component);\n\n    function CbDatasourceAggregatorList() {\n        _classCallCheck(this, CbDatasourceAggregatorList);\n\n        var _this = _possibleConstructorReturn(this, (CbDatasourceAggregatorList.__proto__ || Object.getPrototypeOf(CbDatasourceAggregatorList)).apply(this, arguments));\n\n        _this.state = {\n            list: _this.props.list\n        };\n        _this.handleDatasourceAdd = function () {\n            var newId = _this.props.options[0] ? _this.props.options[0].id : '';\n            var newList = [].concat(_toConsumableArray(_this.state.list), [newId]);\n            _this.setState(_extends({}, _this.state, {\n                list: newList\n            }));\n            _this.props.onChange(newList);\n        };\n        _this.renderList = function (list) {\n            if (list.length > 0) {\n                return react_default.a.createElement(\"div\", null, list.map(_this.renderSelectBox), react_default.a.createElement(reactstrap_es[\"e\" /* Button */], { onClick: _this.handleDatasourceAdd }, 'Add\\xA0 +'));\n            } else {\n                return react_default.a.createElement(\"div\", null, \"No datasources to choose\");\n            }\n        };\n        _this.renderSelectBox = function (el, i) {\n            return react_default.a.createElement(reactstrap_es[\"w\" /* FormGroup */], { row: true, key: i }, react_default.a.createElement(reactstrap_es[\"o\" /* Col */], { sm: 3 }, i + 1, \")\"), react_default.a.createElement(reactstrap_es[\"o\" /* Col */], { sm: 7 }, react_default.a.createElement(reactstrap_es[\"y\" /* Input */], { type: \"select\", value: el, onChange: _this.handleDatasourceChange.bind(_this, i) }, _this.props.options.map(_this.renderDatasourceOption))), react_default.a.createElement(reactstrap_es[\"o\" /* Col */], { sm: 2 }, _this.renderDeleteButton(i)));\n        };\n        _this.renderDeleteButton = function (i) {\n            if (i > 0) {\n                return react_default.a.createElement(reactstrap_es[\"e\" /* Button */], { onClick: _this.handleDatasourceDelete.bind(_this, i) }, '\\xD7');\n            }\n        };\n        return _this;\n    }\n\n    _createClass(CbDatasourceAggregatorList, [{\n        key: 'render',\n        value: function render() {\n            return react_default.a.createElement(reactstrap_es[\"g\" /* Card */], null, react_default.a.createElement(reactstrap_es[\"h\" /* CardBody */], null, this.renderList(this.state.list)));\n        }\n    }, {\n        key: 'handleDatasourceChange',\n        value: function handleDatasourceChange(idx, e) {\n            var newList = [].concat(_toConsumableArray(this.state.list.slice(0, idx)), [e.target.value], _toConsumableArray(this.state.list.slice(idx + 1)));\n            this.setState(_extends({}, this.state, {\n                list: newList\n            }));\n            this.props.onChange(newList);\n        }\n    }, {\n        key: 'handleDatasourceDelete',\n        value: function handleDatasourceDelete(idx) {\n            var newList = [].concat(_toConsumableArray(this.state.list.slice(0, idx)), _toConsumableArray(this.state.list.slice(idx + 1)));\n            this.setState(_extends({}, this.state, {\n                list: newList\n            }));\n            this.props.onChange(newList);\n        }\n    }, {\n        key: 'renderDatasourceOption',\n        value: function renderDatasourceOption(el, i) {\n            return react_default.a.createElement(\"option\", { key: i, value: el.id }, el.name);\n        }\n    }]);\n\n    return CbDatasourceAggregatorList;\n}(react_default.a.Component);\n\n/* harmony default export */ var components_CbDatasourceAggregatorList = (CbDatasourceAggregatorList_CbDatasourceAggregatorList);\n// EXTERNAL MODULE: ./app/containers/Portal/constants.ts\nvar constants = __webpack_require__(\"./app/containers/Portal/constants.ts\");\n\n// EXTERNAL MODULE: ./app/cb-utils/models/PortalModel.ts + 18 modules\nvar PortalModel = __webpack_require__(\"./app/cb-utils/models/PortalModel.ts\");\n\n// EXTERNAL MODULE: ./app/cb-utils/groupOptions.tsx\nvar groupOptions = __webpack_require__(\"./app/cb-utils/groupOptions.tsx\");\n\n// EXTERNAL MODULE: ./app/cb-utils/allRequiredSettingsForPluginHaveData.ts\nvar allRequiredSettingsForPluginHaveData = __webpack_require__(\"./app/cb-utils/allRequiredSettingsForPluginHaveData.ts\");\n\n// EXTERNAL MODULE: ./app/plugins/datasources/types.ts\nvar datasources_types = __webpack_require__(\"./app/plugins/datasources/types.ts\");\n\n// EXTERNAL MODULE: ./app/components/FlexModalHeader/index.tsx\nvar FlexModalHeader = __webpack_require__(\"./app/components/FlexModalHeader/index.tsx\");\n\n// EXTERNAL MODULE: ./app/components/ExportPluginButton/index.tsx\nvar ExportPluginButton = __webpack_require__(\"./app/components/ExportPluginButton/index.tsx\");\n\n// EXTERNAL MODULE: ./app/components/ImportPluginButton/index.tsx\nvar ImportPluginButton = __webpack_require__(\"./app/components/ImportPluginButton/index.tsx\");\n\n// EXTERNAL MODULE: ./node_modules/react-intl/lib/index.es.js + 14 modules\nvar index_es = __webpack_require__(\"./node_modules/react-intl/lib/index.es.js\");\n\n// CONCATENATED MODULE: ./app/components/DatasourceSettingsModal/messages.ts\n\n/* harmony default export */ var messages = (Object(index_es[\"e\" /* defineMessages */])({\n    exportDatasource: {\n        id: 'app.components.DatasourceSettingsModal.exportDatasource',\n        defaultMessage: 'Export Datasource'\n    },\n    importDatasource: {\n        id: 'app.components.DatasourceSettingsModal.importDatasource',\n        defaultMessage: 'Import Datasource'\n    },\n    importDatasourceSuccess: {\n        id: 'app.components.DatasourceSettingsModal.importDatasourceSuccess',\n        defaultMessage: 'Successfully imported datasource'\n    },\n    importDatasourceError: {\n        id: 'app.components.DatasourceSettingsModal.importDatasourceError',\n        defaultMessage: 'Incorrect datasource format'\n    },\n    importDatasourceHelp: {\n        id: 'app.components.DatasourceSettingsModal.importDatasourceHelp',\n        defaultMessage: 'Datasource configurations can be imported from any portal. To create a datasource from a saved configuration, first create a datasource with the desired settings and save it. Once the datasource has been saved, open the edit dialog for the datasource and hit export. This will trigger a download of the datasources .json file which can then be imported here.'\n    },\n    exportDatasourceHelp: {\n        id: 'app.components.DatasourceSettingsModal.exportDatasourceHelp',\n        defaultMessage: 'Export this datasources .json file in order to reuse this datasources configuration in a portal.'\n    }\n}));\n// EXTERNAL MODULE: ./app/components/DatasourceSettingsModal/utils.ts\nvar utils = __webpack_require__(\"./app/components/DatasourceSettingsModal/utils.ts\");\n\n// CONCATENATED MODULE: ./app/components/DatasourceImportConfirmationModal/messages.ts\n/*\n * DatasourceImportConfirmationModal Messages\n *\n * This contains all the text for the DatasourceImportConfirmationModal component.\n */\n\n/* harmony default export */ var DatasourceImportConfirmationModal_messages = (Object(index_es[\"e\" /* defineMessages */])({\n    mainText: {\n        id: 'app.components.DatasourceImportConfirmationModal.mainText',\n        defaultMessage: \"A datasource with the ID '{id}' already exists in this portal.\"\n    },\n    subText: {\n        id: 'app.components.DatasourceImportConfirmationModal.subText',\n        defaultMessage: 'Would you like to replace this datasource or create a new one with a new ID?'\n    },\n    replaceBtnText: {\n        id: 'app.components.DatasourceImportConfirmationModal.replaceBtnText',\n        defaultMessage: 'Replace'\n    },\n    createBtnText: {\n        id: 'app.components.DatasourceImportConfirmationModal.createBtnText',\n        defaultMessage: 'Create New'\n    }\n}));\n// EXTERNAL MODULE: ./app/containers/Console/messages.ts\nvar Console_messages = __webpack_require__(\"./app/containers/Console/messages.ts\");\n\n// CONCATENATED MODULE: ./app/components/DatasourceImportConfirmationModal/index.tsx\n/**\n *\n * DatasourceImportConfirmationModal\n *\n */\n\n\n// import styled from 'styled-components';\n\n\n\nvar DatasourceImportConfirmationModal_DatasourceImportConfirmationModal = function DatasourceImportConfirmationModal(props) {\n    return react_default.a.createElement(reactstrap_es[\"J\" /* Modal */], { isOpen: true }, react_default.a.createElement(reactstrap_es[\"K\" /* ModalBody */], null, react_default.a.createElement(\"h5\", null, react_default.a.createElement(index_es[\"b\" /* FormattedMessage */], Object.assign({}, DatasourceImportConfirmationModal_messages.mainText, { values: { id: props.id } }))), react_default.a.createElement(\"hr\", null), react_default.a.createElement(\"p\", null, react_default.a.createElement(\"em\", null, react_default.a.createElement(index_es[\"b\" /* FormattedMessage */], Object.assign({}, DatasourceImportConfirmationModal_messages.subText))))), react_default.a.createElement(reactstrap_es[\"L\" /* ModalFooter */], null, react_default.a.createElement(reactstrap_es[\"e\" /* Button */], { color: \"success\", onClick: props.onCreate, \"data-cy\": \"create-new-datasource\" }, react_default.a.createElement(index_es[\"b\" /* FormattedMessage */], Object.assign({}, DatasourceImportConfirmationModal_messages.createBtnText))), react_default.a.createElement(reactstrap_es[\"e\" /* Button */], { color: \"primary\", onClick: props.onReplace, \"data-cy\": \"replace-datasource\" }, react_default.a.createElement(index_es[\"b\" /* FormattedMessage */], Object.assign({}, DatasourceImportConfirmationModal_messages.replaceBtnText))), react_default.a.createElement(reactstrap_es[\"e\" /* Button */], { onClick: props.onCancel }, react_default.a.createElement(index_es[\"b\" /* FormattedMessage */], Object.assign({}, Console_messages[\"a\" /* default */].cancel)))));\n};\n/* harmony default export */ var components_DatasourceImportConfirmationModal = (DatasourceImportConfirmationModal_DatasourceImportConfirmationModal);\n// EXTERNAL MODULE: ./node_modules/uuid/v4.js\nvar v4 = __webpack_require__(\"./node_modules/uuid/v4.js\");\nvar v4_default = /*#__PURE__*/__webpack_require__.n(v4);\n\n// EXTERNAL MODULE: ./app/components/Tabs/index.tsx\nvar Tabs = __webpack_require__(\"./app/components/Tabs/index.tsx\");\n\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js\nvar styled_components_browser_esm = __webpack_require__(\"./node_modules/styled-components/dist/styled-components.browser.esm.js\");\n\n// EXTERNAL MODULE: ./app/components/CbCodeEditor/index.tsx\nvar CbCodeEditor = __webpack_require__(\"./app/components/CbCodeEditor/index.tsx\");\n\n// CONCATENATED MODULE: ./app/components/LatestDataForDatasource/messages.ts\n/*\n * LatestDataForDatasource Messages\n *\n * This contains all the text for the LatestDataForDatasource component.\n */\n\n/* harmony default export */ var LatestDataForDatasource_messages = (Object(index_es[\"e\" /* defineMessages */])({\n    never: {\n        id: 'app.containers.LatestDataForDatasource.never',\n        defaultMessage: \"This datasource hasn't received any data yet\"\n    }\n}));\n// CONCATENATED MODULE: ./app/components/LatestDataForDatasource/index.tsx\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar LatestDataForDatasource__extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar LatestDataForDatasource__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction LatestDataForDatasource__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction LatestDataForDatasource__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction LatestDataForDatasource__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * LatestDataModal\n *\n */\n\n\n\n\n\n\nvar portalModel = PortalModel[\"a\" /* default */].getInstance();\nvar Wrapper = styled_components_browser_esm[\"b\" /* default */].div.withConfig({\n    displayName: 'LatestDataForDatasource__Wrapper'\n})(['height: 60vh;']);\nvar wrappingId = 'latestDataForDatasourceWrapper';\n\nvar LatestDataForDatasource_LatestDataForDatasource = function (_React$Component) {\n    LatestDataForDatasource__inherits(LatestDataForDatasource, _React$Component);\n\n    function LatestDataForDatasource(props) {\n        LatestDataForDatasource__classCallCheck(this, LatestDataForDatasource);\n\n        var _this = LatestDataForDatasource__possibleConstructorReturn(this, (LatestDataForDatasource.__proto__ || Object.getPrototypeOf(LatestDataForDatasource)).call(this, props));\n\n        _this.handleUpdate = function () {\n            _this.setState(LatestDataForDatasource__extends({}, _this.state, _this.pickStateFromModel(_this.datasourceInstance)));\n        };\n        _this.datasourceInstance = portalModel.getDatasourceInstanceById(props.id);\n        _this.datasourceInstance.latestData.subscribe(_this.handleUpdate);\n        _this.state = LatestDataForDatasource__extends({}, _this.pickStateFromModel(_this.datasourceInstance));\n        return _this;\n    }\n\n    LatestDataForDatasource__createClass(LatestDataForDatasource, [{\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            this.datasourceInstance.latestData.unsubscribe(this.handleUpdate);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var data = this.state.data;\n\n            var isDataOfTypeObject = (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object';\n            return react_default.a.createElement(\"div\", null, this.state.date ? react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement(\"h4\", { style: { textAlign: 'center' } }, this.state.date, \":\"), react_default.a.createElement(Wrapper, { id: wrappingId }, react_default.a.createElement(CbCodeEditor[\"default\"], { language: isDataOfTypeObject ? CbCodeEditor[\"CbEditorLanguages\"].JSON : null, value: isDataOfTypeObject ? JSON.stringify(data, null, 4) : data, onChange: function onChange() {\n                    return;\n                }, wrappingId: wrappingId, sideBarWidth: 0 }))) : react_default.a.createElement(\"h6\", { className: \"text-center\" }, react_default.a.createElement(index_es[\"b\" /* FormattedMessage */], Object.assign({}, LatestDataForDatasource_messages.never))));\n        }\n    }, {\n        key: 'pickStateFromModel',\n        value: function pickStateFromModel(model) {\n            return {\n                date: model.lastUpdated && model.lastUpdated.toLocaleString(),\n                data: model.latestData()\n            };\n        }\n    }]);\n\n    return LatestDataForDatasource;\n}(react_default.a.Component);\n\n/* harmony default export */ var components_LatestDataForDatasource = (LatestDataForDatasource_LatestDataForDatasource);\n// CONCATENATED MODULE: ./app/components/DatasourceSettingsModal/index.tsx\nvar DatasourceSettingsModal__extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar DatasourceSettingsModal__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction DatasourceSettingsModal__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction DatasourceSettingsModal__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction DatasourceSettingsModal__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * DatasourceSettingsModal\n *\n */\n\n// import styled from 'styled-components';\n// import {FormattedMessage} from 'react-intl';\n// import messages from './messages';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar DatasourceSettingsModal_portalModel = PortalModel[\"a\" /* default */].getInstance();\n\nvar DatasourceSettingsModal_DatasourceSettingsModal = function (_React$Component) {\n    DatasourceSettingsModal__inherits(DatasourceSettingsModal, _React$Component);\n\n    function DatasourceSettingsModal() {\n        DatasourceSettingsModal__classCallCheck(this, DatasourceSettingsModal);\n\n        var _this = DatasourceSettingsModal__possibleConstructorReturn(this, (DatasourceSettingsModal.__proto__ || Object.getPrototypeOf(DatasourceSettingsModal)).apply(this, arguments));\n\n        _this.state = {\n            id: _this.props.id || '',\n            importedDatasource: null,\n            isImport: false,\n            importShouldCreateNewDatasource: false,\n            name: _this.props.name || '',\n            // default to the topic datasource, should only happen when creating a new datasource\n            datasourceType: _this.props.type || datasources_types[\"b\" /* DatasourceTypes */].MESSAGE_TOPIC,\n            props: DatasourceSettingsModal__extends({}, _this.props.settings),\n            currentTab: _this.props.tab || utils[\"a\" /* DatasourceSettingsModalTabs */].settings\n        };\n        _this.datasourceTypes = DatasourceSettingsModal_portalModel.getDatasourceTypes();\n        _this.datasourceInstances = DatasourceSettingsModal_portalModel.getDatasourceInstances();\n        _this.renderSettings = function () {\n            var exportObj = {\n                id: _this.props.id,\n                name: _this.state.name,\n                settings: _this.state.props,\n                type: _this.state.datasourceType\n            };\n            return react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement(FlexModalHeader[\"a\" /* default */], null, _this.props.title, react_default.a.createElement(\"div\", { className: \"ml-auto\" }, _this.props.id ? react_default.a.createElement(ExportPluginButton[\"a\" /* default */], { btnText: messages.exportDatasource, plugin: exportObj, fileName: _this.state.name, helpInfo: messages.exportDatasourceHelp }) : react_default.a.createElement(ImportPluginButton[\"a\" /* default */], { btnText: messages.importDatasource, shapeChecker: utils[\"b\" /* isDatasourceFile */], onComplete: _this.handleImport, successMsg: _this.props.intl.formatMessage(messages.importDatasourceSuccess), badShapeMsg: _this.props.intl.formatMessage(messages.importDatasourceError), helpInfo: messages.importDatasourceHelp }))), react_default.a.createElement(reactstrap_es[\"K\" /* ModalBody */], null, react_default.a.createElement(reactstrap_es[\"w\" /* FormGroup */], { row: true }, react_default.a.createElement(reactstrap_es[\"o\" /* Col */], { sm: 2 }, react_default.a.createElement(reactstrap_es[\"D\" /* Label */], null, \"Name\")), react_default.a.createElement(reactstrap_es[\"o\" /* Col */], { sm: 10 }, react_default.a.createElement(reactstrap_es[\"y\" /* Input */], { \"data-cy\": \"datasource-name\", placeholder: \"Unique name...\", value: _this.state.name, autoFocus: _this.state.name === '', onChange: function onChange(e) {\n                    return _this._onSettingChange('name', e);\n                } }))), react_default.a.createElement(reactstrap_es[\"w\" /* FormGroup */], { row: true }, react_default.a.createElement(reactstrap_es[\"o\" /* Col */], { sm: 2 }, react_default.a.createElement(reactstrap_es[\"D\" /* Label */], null, \"Type\")), react_default.a.createElement(reactstrap_es[\"o\" /* Col */], { sm: 10 }, react_default.a.createElement(reactstrap_es[\"y\" /* Input */], { type: \"select\", placeholder: \"Select type...\", value: _this.state.datasourceType, onChange: function onChange(e) {\n                    return _this._onTypeChange(e);\n                }, \"data-cy\": \"selectDatasourceType\" }, _this._renderDatasourceTypes(_this.datasourceTypes)))), _this.datasourceTypes[_this.state.datasourceType].description && react_default.a.createElement(reactstrap_es[\"U\" /* Row */], null, react_default.a.createElement(reactstrap_es[\"o\" /* Col */], { sm: 2 }, react_default.a.createElement(reactstrap_es[\"D\" /* Label */], null)), react_default.a.createElement(reactstrap_es[\"o\" /* Col */], { sm: 10 }, react_default.a.createElement(\"span\", { className: \"text-muted font-italic\", style: { fontSize: '0.8rem' } }, _this.datasourceTypes[_this.state.datasourceType].description))), react_default.a.createElement(\"hr\", null), _this._renderCustomProps(_this.state.datasourceType, _this.datasourceTypes[_this.state.datasourceType].settings)), react_default.a.createElement(reactstrap_es[\"L\" /* ModalFooter */], null, react_default.a.createElement(reactstrap_es[\"e\" /* Button */], { color: \"default\", onClick: function onClick() {\n                    return _this.props.onDismiss();\n                } }, \"Cancel\"), react_default.a.createElement(reactstrap_es[\"e\" /* Button */], { \"data-cy\": \"save-ds\", type: \"submit\", color: \"primary\", onClick: function onClick(e) {\n                    return _this._onSubmit(e);\n                }, disabled: !_this._isFormComplete() }, \"Apply\")));\n        };\n        _this.renderTabs = function () {\n            return [{\n                id: 'settings',\n                title: 'Settings',\n                component: _this.renderSettings()\n            }, {\n                id: 'data',\n                title: 'Data',\n                component: _this.renderDataView()\n            }];\n        };\n        _this.renderDataView = function () {\n            return react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement(reactstrap_es[\"K\" /* ModalBody */], null, react_default.a.createElement(components_LatestDataForDatasource, { id: _this.props.id })), react_default.a.createElement(reactstrap_es[\"L\" /* ModalFooter */], null, react_default.a.createElement(reactstrap_es[\"e\" /* Button */], { onClick: _this.props.onDismiss }, \"Dismiss\")));\n        };\n        _this.handleImport = function (ds) {\n            // check to see if a datasource already exists with the imported ID\n            if (DatasourceSettingsModal_portalModel.hasDatasourceWithId(ds.id)) {\n                // it does exist - ask the user if they want to replace or create a new one\n                _this.setState({\n                    importedDatasource: ds\n                });\n            } else {\n                _this.setImportValues(ds, true);\n            }\n        };\n        _this.setImportValues = function (ds, importShouldCreateNewDatasource) {\n            _this.setState({\n                importedDatasource: null,\n                importShouldCreateNewDatasource: importShouldCreateNewDatasource,\n                isImport: true,\n                id: ds.id,\n                datasourceType: ds.type,\n                name: ds.name,\n                props: ds.settings\n            });\n        };\n        _this.handleCreateFromImport = function () {\n            _this.setImportValues(DatasourceSettingsModal__extends({}, _this.state.importedDatasource, { id: v4_default()() }), true);\n        };\n        _this.handleReplaceFromImport = function () {\n            _this.setImportValues(_this.state.importedDatasource, false);\n        };\n        _this.handleCancelFromImport = function () {\n            _this.setState({\n                importedDatasource: null,\n                isImport: false\n            });\n        };\n        _this._handleAggregatorListChange = function (val) {\n            _this.setState({\n                props: DatasourceSettingsModal__extends({}, _this.state.props, {\n                    datasources: val\n                })\n            });\n        };\n        _this._isFormComplete = function () {\n            return _this.state.name !== '' && Object(allRequiredSettingsForPluginHaveData[\"a\" /* default */])(_this.datasourceTypes[_this.state.datasourceType].settings, _this.state.props);\n        };\n        _this._onSettingChange = function (key, e) {\n            _this.setState(DatasourceSettingsModal__extends({}, _this.state, _defineProperty({}, key, e.target.value)));\n        };\n        _this._onTypeChange = function (e) {\n            var val = e.target.value;\n            _this.setState({\n                props: _this._setDefaultValuesForSettings(_this.datasourceTypes[val].settings, {}),\n                datasourceType: val\n            });\n        };\n        _this._onDatasourcePropChange = function (key, e) {\n            // key will eventually be setting for specific ds type\n            _this.setState({\n                props: DatasourceSettingsModal__extends({}, _this.state.props, _defineProperty({}, key, e.target && e.target.value !== undefined ? e.target.value : e))\n            });\n        };\n        _this._onSubmit = function (e) {\n            e.preventDefault();\n            var rtn = {\n                id: _this.state.id,\n                isImport: _this.state.isImport,\n                importShouldCreateNewDatasource: _this.state.importShouldCreateNewDatasource,\n                type: _this.state.datasourceType,\n                name: _this.state.name,\n                settings: _this.state.props\n            };\n            _this.props.onClose(rtn);\n        };\n        _this._setDefaultValuesForSettings = function (settingsForType, datasourceSettings) {\n            var rtn = DatasourceSettingsModal__extends({}, datasourceSettings);\n            settingsForType.forEach(function (setting) {\n                if (rtn[setting.name] === undefined) {\n                    if (setting.default_value !== undefined) {\n                        rtn[setting.name] = setting.default_value;\n                    }\n                }\n            });\n            return rtn;\n        };\n        _this._getAggregatorOptions = function () {\n            var rtn = [];\n            for (var id in _this.datasourceInstances) {\n                if (id !== _this.props.id) {\n                    rtn.push(_this.datasourceInstances[id]);\n                }\n            }\n            return rtn;\n        };\n        _this._getAggregatorList = function () {\n            if (_this.state.props.datasources && _this.state.props.datasources.length) {\n                return _this.state.props.datasources;\n            } else if (Object.keys(_this.datasourceInstances).length > 0) {\n                for (var id in _this.datasourceInstances) {\n                    if (_this.datasourceInstances.hasOwnProperty(id) && id !== _this.props.id) {\n                        return [id];\n                    }\n                }\n            }\n            return [];\n        };\n        _this._renderCustomProps = function (type, props) {\n            var rtn = [];\n            if (props) {\n                rtn = props.map(function (el) {\n                    if (el.type !== constants[\"l\" /* DATA_SETTING_TYPE */]) {\n                        return react_default.a.createElement(reactstrap_es[\"U\" /* Row */], { key: el.name }, react_default.a.createElement(CbPluginSettingEditor[\"a\" /* default */], Object.assign({}, el, { size: 12, onChange: function onChange(e) {\n                                return _this._onDatasourcePropChange(el.name, e);\n                            }, value: _this.state.props[el.name] })));\n                    }\n                });\n            }\n            if (type === datasources_types[\"b\" /* DatasourceTypes */].DATASOURCE_AGGREGATOR) {\n                rtn.push(react_default.a.createElement(components_CbDatasourceAggregatorList, { key: \"datasources\", list: _this._getAggregatorList(), options: _this._getAggregatorOptions(), onChange: function onChange(newList) {\n                        return _this._handleAggregatorListChange(newList);\n                    } }));\n            }\n            return rtn;\n        };\n        _this._renderDatasourceTypes = function (types) {\n            return Object(groupOptions[\"a\" /* default */])(types);\n        };\n        return _this;\n    }\n\n    DatasourceSettingsModal__createClass(DatasourceSettingsModal, [{\n        key: 'componentWillMount',\n        value: function componentWillMount() {\n            this.setState({\n                props: this._setDefaultValuesForSettings(this.datasourceTypes[this.state.datasourceType].settings, this.state.props)\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            return react_default.a.createElement(reactstrap_es[\"J\" /* Modal */], { isOpen: true, toggle: this.props.onDismiss, autoFocus: false }, react_default.a.createElement(reactstrap_es[\"v\" /* Form */], { onSubmit: function onSubmit(e) {\n                    return _this2._onSubmit(e);\n                }, \"data-cy\": \"datasource-form\" }, this.props.id ? react_default.a.createElement(Tabs[\"a\" /* default */], { tabs: this.renderTabs(), currentTab: this.state.currentTab, selectNewTab: function selectNewTab(currentTab) {\n                    _this2.setState({ currentTab: currentTab });\n                    if (currentTab === utils[\"a\" /* DatasourceSettingsModalTabs */].data) {\n                        // if the user is navigating to the data tab we need to trigger a resize to get monaco-editor to fill the page properly\n                        setTimeout(function () {\n                            window.dispatchEvent(new Event('resize'));\n                        });\n                    }\n                } }) : this.renderSettings()), this.state.importedDatasource && react_default.a.createElement(components_DatasourceImportConfirmationModal, { id: this.state.importedDatasource.id, onCreate: this.handleCreateFromImport, onReplace: this.handleReplaceFromImport, onCancel: this.handleCancelFromImport }));\n        }\n    }]);\n\n    return DatasourceSettingsModal;\n}(react_default.a.Component);\n\n/* harmony default export */ var components_DatasourceSettingsModal = __webpack_exports__[\"default\"] = (Object(index_es[\"f\" /* injectIntl */])(DatasourceSettingsModal_DatasourceSettingsModal));\n\n/***/ }),\n\n/***/ \"./app/components/ExportPluginButton/index.tsx\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(\"./node_modules/react/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Icons__ = __webpack_require__(\"./app/components/Icons/index.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_intl__ = __webpack_require__(\"./node_modules/react-intl/lib/index.es.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ImportExportHelp__ = __webpack_require__(\"./app/components/ImportExportHelp/index.tsx\");\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * ExportPluginButton\n *\n */\n\n\n\n\n\nvar ExportPluginButton = function (_React$PureComponent) {\n    _inherits(ExportPluginButton, _React$PureComponent);\n\n    function ExportPluginButton() {\n        _classCallCheck(this, ExportPluginButton);\n\n        return _possibleConstructorReturn(this, (ExportPluginButton.__proto__ || Object.getPrototypeOf(ExportPluginButton)).apply(this, arguments));\n    }\n\n    _createClass(ExportPluginButton, [{\n        key: 'render',\n        value: function render() {\n            var _props = this.props,\n                btnText = _props.btnText,\n                plugin = _props.plugin,\n                fileName = _props.fileName,\n                helpInfo = _props.helpInfo;\n\n            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", null, helpInfo && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__ImportExportHelp__[\"a\" /* default */], { bodyText: helpInfo }), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"a\", { \"data-cy\": \"export-plugin-button\", className: \"btn btn-primary\", href: 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(plugin)), download: fileName + '.json' }, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__Icons__[\"j\" /* DownloadIcon */], null), '\\xA0', __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_intl__[\"b\" /* FormattedMessage */], Object.assign({}, btnText))));\n        }\n    }]);\n\n    return ExportPluginButton;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.PureComponent);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ExportPluginButton);\n\n/***/ }),\n\n/***/ \"./app/components/FlexModalHeader/index.tsx\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_styled_components__ = __webpack_require__(\"./node_modules/styled-components/dist/styled-components.browser.esm.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_reactstrap__ = __webpack_require__(\"./node_modules/reactstrap/dist/reactstrap.es.js\");\n/**\n *\n * FlexModalHeader\n *\n */\n\n\nvar FlexModalHeader = Object(__WEBPACK_IMPORTED_MODULE_0_styled_components__[\"b\" /* default */])(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"M\" /* ModalHeader */]).withConfig({\n  displayName: 'FlexModalHeader__FlexModalHeader'\n})(['.modal-title {display: flex;width: 100%;}']);\n/* harmony default export */ __webpack_exports__[\"a\"] = (FlexModalHeader);\n\n/***/ }),\n\n/***/ \"./app/components/ImportExportHelp/index.tsx\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(\"./node_modules/react/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_reactstrap__ = __webpack_require__(\"./node_modules/reactstrap/dist/reactstrap.es.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_components_HelpPrimitive__ = __webpack_require__(\"./app/components/HelpPrimitive/index.tsx\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_styled_components__ = __webpack_require__(\"./node_modules/styled-components/dist/styled-components.browser.esm.js\");\n/**\n *\n * ImportExportHelp\n *\n */\n\n\n\n\nvar LabelWrap = Object(__WEBPACK_IMPORTED_MODULE_3_styled_components__[\"b\" /* default */])(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"D\" /* Label */]).withConfig({\n  displayName: 'ImportExportHelp__LabelWrap'\n})(['margin-right: 0.5rem;']);\nvar ImportExportHelp = function ImportExportHelp(props) {\n  return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(LabelWrap, { className: \"text-muted\" }, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_components_HelpPrimitive__[\"a\" /* default */], { bodyText: props.bodyText }));\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (ImportExportHelp);\n\n/***/ }),\n\n/***/ \"./app/components/ImportPluginButton/index.tsx\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export ImportPluginButton */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(\"./node_modules/react/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Icons__ = __webpack_require__(\"./app/components/Icons/index.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_intl__ = __webpack_require__(\"./node_modules/react-intl/lib/index.es.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_redux__ = __webpack_require__(\"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_containers_Portal_actions__ = __webpack_require__(\"./app/containers/Portal/actions.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ImportExportHelp__ = __webpack_require__(\"./app/components/ImportExportHelp/index.tsx\");\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * ImportPluginButton\n *\n */\n\n\n\n\n\n\nvar ImportPluginButton = function (_React$Component) {\n    _inherits(ImportPluginButton, _React$Component);\n\n    function ImportPluginButton() {\n        _classCallCheck(this, ImportPluginButton);\n\n        var _this = _possibleConstructorReturn(this, (ImportPluginButton.__proto__ || Object.getPrototypeOf(ImportPluginButton)).apply(this, arguments));\n\n        _this.fileInput = null;\n        _this.importPlugin = function (e) {\n            var file = e.target.files[0];\n            var r = new FileReader();\n            r.onload = function (theFile) {\n                try {\n                    var contents = JSON.parse(theFile.target.result);\n                    if (_this.props.shapeChecker(contents)) {\n                        _this.props.onComplete(contents);\n                        _this.props.onImportSuccess(_this.props.successMsg);\n                        _this.fileInput.value = ''; // clear the value in case users try to import the same file\n                    } else {\n                        throw new Error(_this.props.badShapeMsg);\n                    }\n                } catch (err) {\n                    _this.props.onImportError(err.message);\n                }\n            };\n            r.readAsText(file);\n        };\n        return _this;\n    }\n\n    _createClass(ImportPluginButton, [{\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var _props = this.props,\n                btnText = _props.btnText,\n                helpInfo = _props.helpInfo;\n\n            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", null, helpInfo && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__ImportExportHelp__[\"a\" /* default */], { bodyText: helpInfo }), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"label\", { className: \"btn btn-primary\" }, __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__Icons__[\"E\" /* UploadIcon */], null), '\\xA0', __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_intl__[\"b\" /* FormattedMessage */], Object.assign({}, btnText)), __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"input\", { \"data-cy\": \"import-plugin-input\", type: \"file\", hidden: true, accept: \".json\", onChange: this.importPlugin, ref: function ref(_ref) {\n                    return _this2.fileInput = _ref;\n                } })));\n        }\n    }]);\n\n    return ImportPluginButton;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n    return {\n        onImportSuccess: function onImportSuccess(msg) {\n            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_4_containers_Portal_actions__[\"i\" /* addSuccessNotification */])(msg));\n        },\n        onImportError: function onImportError(msg) {\n            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_4_containers_Portal_actions__[\"d\" /* addErrorNotification */])(msg));\n        }\n    };\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_3_react_redux__[\"b\" /* connect */])(null, mapDispatchToProps)(ImportPluginButton));\n\n/***/ }),\n\n/***/ \"./app/containers/Console/messages.ts\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_intl__ = __webpack_require__(\"./node_modules/react-intl/lib/index.es.js\");\n/*\n * Console Messages\n *\n * This contains all the text for the Console component.\n */\n\nvar mess = Object(__WEBPACK_IMPORTED_MODULE_0_react_intl__[\"e\" /* defineMessages */])({\n    header: {\n        id: 'app.containers.Console.header',\n        defaultMessage: 'This is Console container !'\n    },\n    deploy: {\n        id: 'app.containers.Console.deploy',\n        defaultMessage: 'Deploy'\n    },\n    sync: {\n        id: 'app.containers.Console.sync',\n        defaultMessage: 'Sync'\n    },\n    assetClassCode: {\n        id: 'app.components.DeploymentAssetManager.assetClassCode',\n        defaultMessage: 'Code'\n    },\n    assetClassServices: {\n        id: 'app.components.DeploymentAssetManager.assetClassServices',\n        defaultMessage: 'Services'\n    },\n    assetClassPortals: {\n        id: 'app.components.DeploymentAssetManager.assetClassPortals',\n        defaultMessage: 'Portals'\n    },\n    assetClassLibraries: {\n        id: 'app.components.DeploymentAssetManager.assetClassLibraries',\n        defaultMessage: 'Libraries'\n    },\n    assetClassTriggers: {\n        id: 'app.components.DeploymentAssetManager.assetClassTriggers',\n        defaultMessage: 'Triggers'\n    },\n    assetClassTimers: {\n        id: 'app.components.DeploymentAssetManager.assetClassTimers',\n        defaultMessage: 'Timers'\n    },\n    assetClassRoles: {\n        id: 'app.components.DeploymentAssetManager.assetClassRoles',\n        defaultMessage: 'Roles'\n    },\n    assetClassAdapters: {\n        id: 'app.components.DeploymentAssetManager.assetClassAdapters',\n        defaultMessage: 'Adapters'\n    },\n    assetClassPlugins: {\n        id: 'app.components.DeploymentAssetManager.assetClassPlugins',\n        defaultMessage: 'Plugins'\n    },\n    assetClassUsers: {\n        id: 'app.components.DeploymentAssetManager.assetClassUsers',\n        defaultMessage: 'Users'\n    },\n    assetClassDevices: {\n        id: 'app.components.DeploymentAssetManager.assetClassDevices',\n        defaultMessage: 'Devices'\n    },\n    assetClassCollections: {\n        id: 'app.components.DeploymentAssetManager.assetClassCollections',\n        defaultMessage: 'Collections'\n    },\n    assetClassDeployments: {\n        id: 'app.components.DeploymentAssetManager.assetClassDeployments',\n        defaultMessage: 'Deployments'\n    },\n    assetClassEdges: {\n        id: 'app.components.DeploymentAssetManager.assetClassEdges',\n        defaultMessage: 'Edges'\n    },\n    assetClassMessageHistory: {\n        id: 'app.components.DeploymentAssetManager.assetClassMessageHistory',\n        defaultMessage: 'Message History'\n    },\n    assetClassSystems: {\n        id: 'app.components.DeploymentAssetManager.assetClassSystems',\n        defaultMessage: 'Systems'\n    },\n    assetClassMessages: {\n        id: 'app.components.MessagesPage.messages',\n        defaultMessage: 'Messages'\n    },\n    messageTopics: {\n        id: 'app.components.RoleDetailPage.messageTopics',\n        defaultMessage: 'Message Topics'\n    },\n    readPermission: {\n        id: 'app.components.SimplePermissionsCard.read',\n        defaultMessage: 'Read'\n    },\n    createPermission: {\n        id: 'app.components.SimplePermissionsCard.create',\n        defaultMessage: 'Create'\n    },\n    updatePermission: {\n        id: 'app.components.SimplePermissionsCard.update',\n        defaultMessage: 'Update'\n    },\n    deletePermission: {\n        id: 'app.components.SimplePermissionsCard.delete',\n        defaultMessage: 'Delete'\n    },\n    runPermission: {\n        id: 'app.components.SimplePermissionsCard.run',\n        defaultMessage: 'Run'\n    },\n    subscribePermission: {\n        id: 'app.components.SimplePermissionsCard.subscribe',\n        defaultMessage: 'Subscribe'\n    },\n    publishPermission: {\n        id: 'app.components.SimplePermissionsCard.publish',\n        defaultMessage: 'Publish'\n    },\n    allPermissions: {\n        id: 'app.containers.Console.allPermissions',\n        defaultMessage: 'All'\n    },\n    name: {\n        id: 'app.containers.Console.name',\n        defaultMessage: 'Name'\n    },\n    description: {\n        id: 'app.containers.console.description',\n        defaultMessage: 'Description'\n    },\n    architecture: {\n        id: 'app.containers.AdaptersPage.architecture',\n        defaultMessage: 'Architecture'\n    },\n    discardChanges: {\n        id: 'app.containers.Console.discardChanges',\n        defaultMessage: 'Discard changes'\n    },\n    saveAndExit: {\n        id: 'app.containers.Console.saveAndExit',\n        defaultMessage: 'Save and exit'\n    },\n    errorNameRequired: {\n        id: 'app.components.NewEdgeModal.errorNameRequired',\n        defaultMessage: 'Required'\n    },\n    errorSpaces: {\n        id: 'app.components.NewEdgeModal.errorSpaces',\n        defaultMessage: 'Cannot have spaces'\n    },\n    errorSpecialCharacters: {\n        id: 'app.components.NewEdgeModal.errorSpecialCharacters',\n        defaultMessage: 'Cannot have special characters'\n    },\n    about: {\n        id: 'app.containers.Console.about',\n        defaultMessage: 'About'\n    },\n    advanced: {\n        id: 'app.containers.Console.advanced',\n        defaultMessage: 'Advanced'\n    },\n    cancel: {\n        id: 'app.containers.Console.cancel',\n        defaultMessage: 'Cancel'\n    },\n    close: {\n        id: 'app.containers.Console.close',\n        defaultMessage: 'Close'\n    },\n    summary: {\n        id: 'app.containers.Console.summary',\n        defaultMessage: 'Summary: '\n    },\n    ipmImportError: {\n        id: 'app.containers.Console.ipmImportError',\n        defaultMessage: 'Import Error'\n    }\n});\n/* harmony default export */ __webpack_exports__[\"a\"] = (mess);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 30.a36ce8c6c29e1b49e039.chunk.js","import {\n  PluginSettingDefinitions,\n  SettingTypes,\n  MultiObjectSettingDefinition,\n} from 'utils/types';\nimport { AnyMap } from './console-entity-models';\n\nconst allRequiredSettingsForPluginHaveData = (\n  settings: PluginSettingDefinitions,\n  values: AnyMap,\n) => {\n  if (settings) {\n    for (const setting of settings) {\n      const settingValue = values[setting.name];\n      if (setting.type === SettingTypes.MULTI_OBJECT_SETTING_TYPE) {\n        // If the setting is a multi-object-setting, the value of the setting will be an array\n        // containing an object representing the values for each field within a group of fields.\n        //\n        // [\n        //  {\n        //    \"dataKey\":\"uv\",\n        //    \"fill\":\"\",\n        //    \"yAxisId\":\"t\",\n        //    \"legendType\":\"star\",\n        //    \"stackId\":\"\",\n        //    \"name\":\"\"\n        //  }\n        // ]\n\n        // objectShape will contain an array of objects, each object containing the metadata for\n        // a specific field\n        const objectShape = (setting as MultiObjectSettingDefinition)\n          .objectShape;\n        // \"objectShape\":[\n        //  {\n        //    \"name\":\"dataKey\",\n        //    \"display_name\":\"Data Key\",\n        //    \"type\":\"dataKey\",\"required\":true\n        //  },{\n        //    \"name\":\"fill\",\n        //    \"display_name\":\"Fill\",\n        //    \"default_value\":\"\",\n        //    \"type\":\"color\",\n        //    \"required\":true\n        //  },{\n        //    \"name\":\"yAxisId\",\n        //    \"display_name\":\"Y Axis ID\",\n        //    \"type\":\"text\",\n        //    \"required\":true\n        //  },{\n        //    \"name\":\"legendType\",\n        //    \"display_name\":\"Legend Type\",\n        //    \"type\":\"option\",\n        //    \"default_value\":\"star\",\n        //    \"options\":[\n        //      {\n        //        \"name\":\"line\",\n        //        \"value\":\"line\"\n        //      },{\n        //        \"name\":\"square\",\n        //        \"value\":\"square\"\n        //      },{\n        //        \"name\":\"rect\",\n        //        \"value\":\"rect\"\n        //      },{\n        //        \"name\":\"circle\",\n        //        \"value\":\"circle\"\n        //      },{\n        //        \"name\":\"cross\",\n        //        \"value\":\"cross\"\n        //      },{\n        //        \"name\":\"diamond\",\n        //        \"value\":\"diamond\"\n        //      },{\n        //        \"name\":\"star\",\n        //        \"value\":\"star\"\n        //      },{\n        //        \"name\":\"triangle\",\n        //        \"value\":\"triangle\"\n        //      },{\n        //        \"name\":\"wye\",\n        //        \"value\":\"wye\"\n        //      }\n        //    ],\n        //    \"required\":true\n        //  },{\n        //    \"name\":\"stackId\",\n        //    \"display_name\":\"Stack ID\",\n        //    \"type\":\"text\",\n        //    \"required\":true\n        //  },{\n        //    \"name\":\"name\",\n        //    \"display_name\":\"Name\",\n        //    \"type\":\"text\",\n        //    \"required\":true\n        //  }\n        // ]\n        for (const def of objectShape) {\n          for (\n            let j = 0, settingValueLen = settingValue.length;\n            j < settingValueLen;\n            j += 1\n          ) {\n            if (\n              def.required &&\n              (settingValue[j][def.name] === undefined ||\n                settingValue[j][def.name] === '')\n            ) {\n              return false;\n            }\n          }\n        }\n      } else {\n        if (\n          !!setting.required &&\n          (settingValue === undefined || settingValue === '')\n        ) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nexport default allRequiredSettingsForPluginHaveData;\n\n\n\n// WEBPACK FOOTER //\n// ./app/cb-utils/allRequiredSettingsForPluginHaveData.ts","import React from 'react';\nimport groupBy from 'lodash/groupBy';\nimport { Map } from './console-entity-models';\n\ninterface IGroupable {\n  group?: string;\n}\n\nexport const groupAndFlatten = (types: Map<IGroupable> | IGroupable[]) => {\n  const groups = groupBy(types, (type) => (type.group ? type.group : 'Other'));\n  const sortedGroups = Object.keys(groups).sort((a, b) => (a > b ? 1 : -1));\n  return sortedGroups.reduce((acc, group) => {\n    acc.push(\n      {\n        name: group,\n        display_name: group,\n        disabled: true,\n      },\n      ...groups[group],\n    );\n    return acc;\n  }, []);\n};\n\nconst groupOptions = (types: Map<IGroupable>) => {\n  const flatSortedGroups = groupAndFlatten(types);\n  return flatSortedGroups.map((val, i) => {\n    if (val.disabled) {\n      return (\n        <option key={i} disabled>\n          --- {val.display_name} ---\n        </option>\n      );\n    } else {\n      return (\n        <option\n          key={i}\n          data-test=\"typeOption\"\n          value={val.type_name}\n          title={val.description || null}\n        >\n          {val.display_name}\n        </option>\n      );\n    }\n  });\n};\n\nexport default groupOptions;\n\n\n\n// WEBPACK FOOTER //\n// ./app/cb-utils/groupOptions.tsx","/**\n *\n * CbPluginSettingEditor\n *\n */\n\nimport React from 'react';\n// import styled from 'styled-components';\n\nimport CbInputField from 'components/CbInputField';\n\nimport MultiObjectSettingEditor from 'components/MultiObjectSettingEditor';\n\nimport { MULTI_OBJECT_SETTING_TYPE } from 'containers/Portal/constants';\nimport {\n  PluginSettingDefinitionTypes,\n  InputFieldProps,\n  MultiObjectSettingDefinition,\n} from 'utils/types';\n\nconst CbPluginSettingEditor: React.SFC<\n  PluginSettingDefinitionTypes & InputFieldProps\n> = (props) => {\n  if (props.type === MULTI_OBJECT_SETTING_TYPE) {\n    return (\n      <MultiObjectSettingEditor {...props as MultiObjectSettingDefinition} />\n    );\n  } else {\n    return <CbInputField {...props} labelText={props.display_name} />;\n  }\n};\n\nCbPluginSettingEditor.propTypes = {};\n\nexport default CbPluginSettingEditor;\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/CbPluginSettingEditor/index.tsx","/**\n *\n * CbDatasourceAggregatorList\n *\n */\n\nimport React from 'react';\n\nimport { FormGroup, Col, Input, Button, Card, CardBody } from 'reactstrap';\nimport DatasourceModel from 'cb-utils/models/datasource/DatasourceModel';\n\ninterface IProps {\n  list: string[];\n  options: DatasourceModel[];\n  onChange: (list: string[]) => void;\n}\n\ninterface IState {\n  list: string[];\n}\n\nclass CbDatasourceAggregatorList extends React.Component<IProps, IState> {\n  state = {\n    list: this.props.list,\n  };\n\n  render() {\n    return (\n      <Card>\n        <CardBody>{this.renderList(this.state.list)}</CardBody>\n      </Card>\n    );\n  }\n\n  handleDatasourceChange(idx: number, e: React.ChangeEvent<HTMLInputElement>) {\n    const newList = [\n      ...this.state.list.slice(0, idx),\n      e.target.value,\n      ...this.state.list.slice(idx + 1),\n    ];\n    this.setState({\n      ...this.state,\n      list: newList,\n    });\n    this.props.onChange(newList);\n  }\n\n  handleDatasourceDelete(idx: number) {\n    const newList = [\n      ...this.state.list.slice(0, idx),\n      ...this.state.list.slice(idx + 1),\n    ];\n    this.setState({\n      ...this.state,\n      list: newList,\n    });\n    this.props.onChange(newList);\n  }\n\n  handleDatasourceAdd = () => {\n    const newId = this.props.options[0] ? this.props.options[0].id : '';\n    const newList = [...this.state.list, newId];\n    this.setState({\n      ...this.state,\n      list: newList,\n    });\n    this.props.onChange(newList);\n  };\n\n  renderList = (list: string[]) => {\n    if (list.length > 0) {\n      return (\n        <div>\n          {list.map(this.renderSelectBox)}\n          <Button onClick={this.handleDatasourceAdd}>Add&nbsp; +</Button>\n        </div>\n      );\n    } else {\n      return <div>No datasources to choose</div>;\n    }\n  };\n\n  renderSelectBox = (el: string, i: number) => {\n    return (\n      <FormGroup row key={i}>\n        <Col sm={3}>{i + 1})</Col>\n        <Col sm={7}>\n          <Input\n            type=\"select\"\n            value={el}\n            onChange={this.handleDatasourceChange.bind(this, i)}\n          >\n            {this.props.options.map(this.renderDatasourceOption)}\n          </Input>\n        </Col>\n        <Col sm={2}>{this.renderDeleteButton(i)}</Col>\n      </FormGroup>\n    );\n  };\n\n  renderDatasourceOption(el: DatasourceModel, i: number) {\n    return (\n      <option key={i} value={el.id}>\n        {el.name}\n      </option>\n    );\n  }\n\n  renderDeleteButton = (i: number) => {\n    if (i > 0) {\n      return (\n        <Button onClick={this.handleDatasourceDelete.bind(this, i)}>\n          &times;\n        </Button>\n      );\n    }\n  };\n}\n\nexport default CbDatasourceAggregatorList;\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/CbDatasourceAggregatorList/index.tsx","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  exportDatasource: {\n    id: 'app.components.DatasourceSettingsModal.exportDatasource',\n    defaultMessage: 'Export Datasource',\n  },\n  importDatasource: {\n    id: 'app.components.DatasourceSettingsModal.importDatasource',\n    defaultMessage: 'Import Datasource',\n  },\n  importDatasourceSuccess: {\n    id: 'app.components.DatasourceSettingsModal.importDatasourceSuccess',\n    defaultMessage: 'Successfully imported datasource',\n  },\n  importDatasourceError: {\n    id: 'app.components.DatasourceSettingsModal.importDatasourceError',\n    defaultMessage: 'Incorrect datasource format',\n  },\n  importDatasourceHelp: {\n    id: 'app.components.DatasourceSettingsModal.importDatasourceHelp',\n    defaultMessage:\n      'Datasource configurations can be imported from any portal. To create a datasource from a saved configuration, first create a datasource with the desired settings and save it. Once the datasource has been saved, open the edit dialog for the datasource and hit export. This will trigger a download of the datasources .json file which can then be imported here.',\n  },\n  exportDatasourceHelp: {\n    id: 'app.components.DatasourceSettingsModal.exportDatasourceHelp',\n    defaultMessage:\n      'Export this datasources .json file in order to reuse this datasources configuration in a portal.',\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/DatasourceSettingsModal/messages.ts","/*\n * DatasourceImportConfirmationModal Messages\n *\n * This contains all the text for the DatasourceImportConfirmationModal component.\n */\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  mainText: {\n    id: 'app.components.DatasourceImportConfirmationModal.mainText',\n    defaultMessage:\n      \"A datasource with the ID '{id}' already exists in this portal.\",\n  },\n  subText: {\n    id: 'app.components.DatasourceImportConfirmationModal.subText',\n    defaultMessage:\n      'Would you like to replace this datasource or create a new one with a new ID?',\n  },\n  replaceBtnText: {\n    id: 'app.components.DatasourceImportConfirmationModal.replaceBtnText',\n    defaultMessage: 'Replace',\n  },\n  createBtnText: {\n    id: 'app.components.DatasourceImportConfirmationModal.createBtnText',\n    defaultMessage: 'Create New',\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/DatasourceImportConfirmationModal/messages.ts","/**\n *\n * DatasourceImportConfirmationModal\n *\n */\n\nimport React, { SFC } from 'react';\nimport { Modal, ModalBody, ModalFooter, Button } from 'reactstrap';\n// import styled from 'styled-components';\n\nimport { FormattedMessage } from 'react-intl';\nimport messages from './messages';\nimport consoleMessages from 'containers/Console/messages';\n\ninterface DatasourceImportConfirmationModalProps {\n  id: string;\n  onCreate: () => void;\n  onReplace: () => void;\n  onCancel: () => void;\n}\n\nconst DatasourceImportConfirmationModal: SFC<\n  DatasourceImportConfirmationModalProps\n> = (props) => {\n  return (\n    <Modal isOpen>\n      <ModalBody>\n        <h5>\n          <FormattedMessage {...messages.mainText} values={{ id: props.id }} />\n        </h5>\n        <hr />\n        <p>\n          <em>\n            <FormattedMessage {...messages.subText} />\n          </em>\n        </p>\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          color=\"success\"\n          onClick={props.onCreate}\n          data-cy=\"create-new-datasource\"\n        >\n          <FormattedMessage {...messages.createBtnText} />\n        </Button>\n        <Button\n          color=\"primary\"\n          onClick={props.onReplace}\n          data-cy=\"replace-datasource\"\n        >\n          <FormattedMessage {...messages.replaceBtnText} />\n        </Button>\n        <Button onClick={props.onCancel}>\n          <FormattedMessage {...consoleMessages.cancel} />\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default DatasourceImportConfirmationModal;\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/DatasourceImportConfirmationModal/index.tsx","/*\n * LatestDataForDatasource Messages\n *\n * This contains all the text for the LatestDataForDatasource component.\n */\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  never: {\n    id: 'app.containers.LatestDataForDatasource.never',\n    defaultMessage: \"This datasource hasn't received any data yet\",\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/LatestDataForDatasource/messages.ts","/**\n *\n * LatestDataModal\n *\n */\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport PortalModel from '../../cb-utils/models/PortalModel';\nimport DatasourceModel from 'cb-utils/models/datasource/DatasourceModel';\nimport CbCodeEditor, { CbEditorLanguages } from '../CbCodeEditor';\nimport { FormattedMessage } from 'react-intl';\nimport messages from './messages';\nconst portalModel = PortalModel.getInstance();\n\nconst Wrapper = styled.div`\n  height: 60vh;\n`;\n\ninterface IProps {\n  id: string;\n}\n\ninterface IState {\n  date: string;\n  data: any;\n}\n\nconst wrappingId = 'latestDataForDatasourceWrapper';\n\nclass LatestDataForDatasource extends React.Component<IProps, IState> {\n  datasourceInstance: DatasourceModel;\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.datasourceInstance = portalModel.getDatasourceInstanceById(props.id);\n    this.datasourceInstance.latestData.subscribe(this.handleUpdate);\n\n    this.state = {\n      ...this.pickStateFromModel(this.datasourceInstance),\n    };\n  }\n\n  componentWillUnmount() {\n    this.datasourceInstance.latestData.unsubscribe(this.handleUpdate);\n  }\n\n  render() {\n    const { data } = this.state;\n    const isDataOfTypeObject = typeof data === 'object';\n    return (\n      <div>\n        {this.state.date ? (\n          <React.Fragment>\n            <h4 style={{ textAlign: 'center' }}>{this.state.date}:</h4>\n            <Wrapper id={wrappingId}>\n              <CbCodeEditor\n                language={isDataOfTypeObject ? CbEditorLanguages.JSON : null}\n                value={\n                  isDataOfTypeObject ? JSON.stringify(data, null, 4) : data\n                }\n                onChange={() => {\n                  return;\n                }}\n                wrappingId={wrappingId}\n                sideBarWidth={0}\n              />\n            </Wrapper>\n          </React.Fragment>\n        ) : (\n          <h6 className=\"text-center\">\n            <FormattedMessage {...messages.never} />\n          </h6>\n        )}\n      </div>\n    );\n  }\n\n  pickStateFromModel(model: DatasourceModel) {\n    return {\n      date: model.lastUpdated && model.lastUpdated.toLocaleString(),\n      data: model.latestData(),\n    };\n  }\n\n  handleUpdate = () => {\n    this.setState({\n      ...this.state,\n      ...this.pickStateFromModel(this.datasourceInstance),\n    });\n  };\n}\n\nexport default LatestDataForDatasource;\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/LatestDataForDatasource/index.tsx","/**\n *\n * DatasourceSettingsModal\n *\n */\n\nimport React, { FormEvent } from 'react';\n// import styled from 'styled-components';\n\n// import {FormattedMessage} from 'react-intl';\n// import messages from './messages';\n\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Col,\n  Row,\n  Button,\n} from 'reactstrap';\n\nimport CbPluginSettingEditor from '../../components/CbPluginSettingEditor';\nimport CbDatasourceAggregatorList from '../../components/CbDatasourceAggregatorList';\nimport { DATA_SETTING_TYPE } from '../../containers/Portal/constants';\nimport PortalModel from 'cb-utils/models/PortalModel';\nimport groupOptions from '../../cb-utils/groupOptions';\nimport allRequiredSettingsForPluginHaveData from '../../cb-utils/allRequiredSettingsForPluginHaveData';\nimport {\n  CBEvent,\n  DatasourceDefinition,\n  PluginSettingDefinitions,\n  PluginSettingDefinitionTypes,\n  SettingsInstance,\n} from 'utils/types';\nimport { Map, AnyMap } from 'cb-utils/console-entity-models';\nimport { DatasourceTypes } from 'plugins/datasources/types';\nimport FlexModalHeader from '../FlexModalHeader';\nimport ExportPluginButton from '../ExportPluginButton';\nimport ImportPluginButton from '../ImportPluginButton';\nimport messages from './messages';\nimport { isDatasourceFile, DatasourceSettingsModalTabs } from './utils';\nimport { IDatasourceInfo } from 'cb-utils/models/datasource/DatasourceModel';\nimport { injectIntl } from 'react-intl';\nimport DatasourceImportConfirmationModal from '../DatasourceImportConfirmationModal';\nimport uuid from 'uuid/v4';\nimport Tabs, { TabType } from 'components/Tabs';\nimport LatestDataForDatasource from '../LatestDataForDatasource';\n\nexport interface DatasourceSettingsModalReturn {\n  id: string;\n  isImport: boolean;\n  importShouldCreateNewDatasource: boolean;\n  type: DatasourceTypes;\n  name: string;\n  settings: AnyMap;\n}\n\nexport interface DatasourceSettingsModalProps {\n  name?: string;\n  type?: DatasourceTypes;\n  tab?: DatasourceSettingsModalTabs;\n  settings?: SettingsInstance;\n  id?: string;\n  modalProps: {\n    title: string;\n  };\n  modalType: string;\n  onClose: (data: DatasourceSettingsModalReturn) => void;\n  onDismiss: () => void;\n  title: string;\n}\n\ninterface DatasourceSettingsModalState {\n  id: string;\n  importedDatasource: IDatasourceInfo;\n  isImport: boolean;\n  importShouldCreateNewDatasource: boolean;\n  datasourceType: DatasourceTypes;\n  name: string;\n  props: SettingsInstance;\n  currentTab: DatasourceSettingsModalTabs;\n}\n\nconst portalModel = PortalModel.getInstance();\n\nclass DatasourceSettingsModal extends React.Component<\n  DatasourceSettingsModalProps & ReactIntl.InjectedIntlProps,\n  DatasourceSettingsModalState\n> {\n  state: DatasourceSettingsModalState = {\n    id: this.props.id || '',\n    importedDatasource: null,\n    isImport: false,\n    importShouldCreateNewDatasource: false,\n    name: this.props.name || '',\n    // default to the topic datasource, should only happen when creating a new datasource\n    datasourceType: this.props.type || DatasourceTypes.MESSAGE_TOPIC,\n    props: { ...this.props.settings },\n    currentTab: this.props.tab || DatasourceSettingsModalTabs.settings,\n  };\n\n  componentWillMount() {\n    this.setState({\n      props: this._setDefaultValuesForSettings(\n        this.datasourceTypes[this.state.datasourceType].settings,\n        this.state.props,\n      ),\n    });\n  }\n\n  datasourceTypes = portalModel.getDatasourceTypes();\n  datasourceInstances = portalModel.getDatasourceInstances();\n\n  render() {\n    return (\n      <Modal isOpen toggle={this.props.onDismiss} autoFocus={false}>\n        <Form onSubmit={(e) => this._onSubmit(e)} data-cy=\"datasource-form\">\n          {this.props.id ? (\n            <Tabs\n              tabs={this.renderTabs()}\n              currentTab={this.state.currentTab}\n              selectNewTab={(currentTab: DatasourceSettingsModalTabs) => {\n                this.setState({ currentTab });\n                if (currentTab === DatasourceSettingsModalTabs.data) {\n                  // if the user is navigating to the data tab we need to trigger a resize to get monaco-editor to fill the page properly\n                  setTimeout(() => {\n                    window.dispatchEvent(new Event('resize'));\n                  });\n                }\n              }}\n            />\n          ) : (\n            this.renderSettings()\n          )}\n        </Form>\n\n        {this.state.importedDatasource && (\n          <DatasourceImportConfirmationModal\n            id={this.state.importedDatasource.id}\n            onCreate={this.handleCreateFromImport}\n            onReplace={this.handleReplaceFromImport}\n            onCancel={this.handleCancelFromImport}\n          />\n        )}\n      </Modal>\n    );\n  }\n\n  renderSettings = () => {\n    const exportObj: IDatasourceInfo = {\n      id: this.props.id,\n      name: this.state.name,\n      settings: this.state.props,\n      type: this.state.datasourceType,\n    };\n    return (\n      <React.Fragment>\n        <FlexModalHeader>\n          {this.props.title}\n          <div className=\"ml-auto\">\n            {this.props.id ? (\n              <ExportPluginButton\n                btnText={messages.exportDatasource}\n                plugin={exportObj}\n                fileName={this.state.name}\n                helpInfo={messages.exportDatasourceHelp}\n              />\n            ) : (\n              <ImportPluginButton\n                btnText={messages.importDatasource}\n                shapeChecker={isDatasourceFile}\n                onComplete={this.handleImport}\n                successMsg={this.props.intl.formatMessage(\n                  messages.importDatasourceSuccess,\n                )}\n                badShapeMsg={this.props.intl.formatMessage(\n                  messages.importDatasourceError,\n                )}\n                helpInfo={messages.importDatasourceHelp}\n              />\n            )}\n          </div>\n        </FlexModalHeader>\n\n        <ModalBody>\n          <FormGroup row>\n            <Col sm={2}>\n              <Label>Name</Label>\n            </Col>\n            <Col sm={10}>\n              <Input\n                data-cy=\"datasource-name\"\n                placeholder=\"Unique name...\"\n                value={this.state.name}\n                autoFocus={this.state.name === ''}\n                onChange={(e) => this._onSettingChange('name', e)}\n              />\n            </Col>\n          </FormGroup>\n\n          <FormGroup row>\n            <Col sm={2}>\n              <Label>Type</Label>\n            </Col>\n            <Col sm={10}>\n              <Input\n                type=\"select\"\n                placeholder=\"Select type...\"\n                value={this.state.datasourceType}\n                onChange={(e) => this._onTypeChange(e)}\n                data-cy=\"selectDatasourceType\"\n              >\n                {this._renderDatasourceTypes(this.datasourceTypes)}\n              </Input>\n            </Col>\n          </FormGroup>\n\n          {this.datasourceTypes[this.state.datasourceType].description && (\n            <Row>\n              <Col sm={2}>\n                <Label />\n              </Col>\n              <Col sm={10}>\n                <span\n                  className=\"text-muted font-italic\"\n                  style={{ fontSize: '0.8rem' }}\n                >\n                  {this.datasourceTypes[this.state.datasourceType].description}\n                </span>\n              </Col>\n            </Row>\n          )}\n          <hr />\n          {this._renderCustomProps(\n            this.state.datasourceType,\n            this.datasourceTypes[this.state.datasourceType].settings,\n          )}\n        </ModalBody>\n\n        <ModalFooter>\n          <Button color=\"default\" onClick={() => this.props.onDismiss()}>\n            Cancel\n          </Button>\n          <Button\n            data-cy=\"save-ds\"\n            type=\"submit\"\n            color=\"primary\"\n            onClick={(e) => this._onSubmit(e)}\n            disabled={!this._isFormComplete()}\n          >\n            Apply\n          </Button>\n        </ModalFooter>\n      </React.Fragment>\n    );\n  };\n\n  renderTabs = (): TabType[] => {\n    return [\n      {\n        id: 'settings',\n        title: 'Settings',\n        component: this.renderSettings(),\n      },\n      {\n        id: 'data',\n        title: 'Data',\n        component: this.renderDataView(),\n      },\n    ];\n  };\n\n  renderDataView = () => {\n    return (\n      <React.Fragment>\n        <ModalBody>\n          <LatestDataForDatasource id={this.props.id} />\n        </ModalBody>\n\n        <ModalFooter>\n          <Button onClick={this.props.onDismiss}>Dismiss</Button>\n        </ModalFooter>\n      </React.Fragment>\n    );\n  };\n\n  handleImport = (ds: IDatasourceInfo) => {\n    // check to see if a datasource already exists with the imported ID\n    if (portalModel.hasDatasourceWithId(ds.id)) {\n      // it does exist - ask the user if they want to replace or create a new one\n      this.setState({\n        importedDatasource: ds,\n      });\n    } else {\n      this.setImportValues(ds, true);\n    }\n  };\n\n  setImportValues = (\n    ds: IDatasourceInfo,\n    importShouldCreateNewDatasource: boolean,\n  ) => {\n    this.setState({\n      importedDatasource: null,\n      importShouldCreateNewDatasource,\n      isImport: true,\n      id: ds.id,\n      datasourceType: ds.type as DatasourceTypes,\n      name: ds.name,\n      props: ds.settings,\n    });\n  };\n\n  handleCreateFromImport = () => {\n    this.setImportValues(\n      { ...this.state.importedDatasource, id: uuid() },\n      true,\n    );\n  };\n\n  handleReplaceFromImport = () => {\n    this.setImportValues(this.state.importedDatasource, false);\n  };\n\n  handleCancelFromImport = () => {\n    this.setState({\n      importedDatasource: null,\n      isImport: false,\n    });\n  };\n\n  _handleAggregatorListChange = (val: string[]) => {\n    this.setState({\n      props: {\n        ...this.state.props,\n        datasources: val,\n      },\n    });\n  };\n\n  _isFormComplete = () => {\n    return (\n      this.state.name !== '' &&\n      allRequiredSettingsForPluginHaveData(\n        this.datasourceTypes[this.state.datasourceType].settings,\n        this.state.props,\n      )\n    );\n  };\n\n  _onSettingChange = (key: keyof DatasourceSettingsModalState, e: CBEvent) => {\n    this.setState({\n      ...this.state,\n      [key]: e.target.value,\n    });\n  };\n\n  _onTypeChange = (e: CBEvent) => {\n    const val = e.target.value;\n    this.setState({\n      props: this._setDefaultValuesForSettings(\n        this.datasourceTypes[val].settings,\n        {},\n      ),\n      datasourceType: val,\n    });\n  };\n\n  _onDatasourcePropChange = (\n    key: keyof PluginSettingDefinitionTypes,\n    e: CBEvent,\n  ) => {\n    // key will eventually be setting for specific ds type\n    this.setState({\n      props: {\n        ...this.state.props,\n        [key]: e.target && e.target.value !== undefined ? e.target.value : e,\n      },\n    });\n  };\n\n  _onSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const rtn = {\n      id: this.state.id,\n      isImport: this.state.isImport,\n      importShouldCreateNewDatasource: this.state\n        .importShouldCreateNewDatasource,\n      type: this.state.datasourceType,\n      name: this.state.name,\n      settings: this.state.props,\n    };\n    this.props.onClose(rtn);\n  };\n\n  _setDefaultValuesForSettings = (\n    settingsForType: PluginSettingDefinitions,\n    datasourceSettings: Partial<PluginSettingDefinitionTypes> | {},\n  ) => {\n    const rtn: Partial<PluginSettingDefinitionTypes> = {\n      ...datasourceSettings,\n    };\n\n    settingsForType.forEach((setting: PluginSettingDefinitionTypes) => {\n      if (\n        rtn[setting.name as keyof PluginSettingDefinitionTypes] === undefined\n      ) {\n        if (setting.default_value !== undefined) {\n          rtn[setting.name as keyof PluginSettingDefinitionTypes] =\n            setting.default_value;\n        }\n      }\n    });\n\n    return rtn;\n  };\n\n  _getAggregatorOptions = () => {\n    const rtn = [];\n    for (const id in this.datasourceInstances) {\n      if (id !== this.props.id) {\n        rtn.push(this.datasourceInstances[id]);\n      }\n    }\n    return rtn;\n  };\n\n  _getAggregatorList = () => {\n    if (this.state.props.datasources && this.state.props.datasources.length) {\n      return this.state.props.datasources;\n    } else if (Object.keys(this.datasourceInstances).length > 0) {\n      for (const id in this.datasourceInstances) {\n        if (\n          this.datasourceInstances.hasOwnProperty(id) &&\n          id !== this.props.id\n        ) {\n          return [id];\n        }\n      }\n    }\n    return [];\n  };\n\n  _renderCustomProps = (\n    type: DatasourceTypes,\n    props: PluginSettingDefinitions,\n  ) => {\n    let rtn: any[] = [];\n    if (props) {\n      rtn = props.map((el: PluginSettingDefinitionTypes) => {\n        if (el.type !== DATA_SETTING_TYPE) {\n          return (\n            <Row key={el.name}>\n              <CbPluginSettingEditor\n                {...el}\n                size={12}\n                onChange={(e) =>\n                  this._onDatasourcePropChange(\n                    el.name as keyof PluginSettingDefinitionTypes,\n                    e,\n                  )\n                }\n                value={\n                  this.state.props[\n                    el.name as keyof PluginSettingDefinitionTypes\n                  ]\n                }\n              />\n            </Row>\n          );\n        }\n      });\n    }\n    if (type === DatasourceTypes.DATASOURCE_AGGREGATOR) {\n      rtn.push(\n        <CbDatasourceAggregatorList\n          key=\"datasources\"\n          list={this._getAggregatorList()}\n          options={this._getAggregatorOptions()}\n          onChange={(newList: string[]) =>\n            this._handleAggregatorListChange(newList)\n          }\n        />,\n      );\n    }\n    return rtn;\n  };\n\n  _renderDatasourceTypes = (types: Map<DatasourceDefinition>) => {\n    return groupOptions(types);\n  };\n}\n\nexport default injectIntl(DatasourceSettingsModal);\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/DatasourceSettingsModal/index.tsx","/**\n *\n * ExportPluginButton\n *\n */\n\nimport React from 'react';\nimport { DownloadIcon } from '../Icons';\nimport { FormattedMessage } from 'react-intl';\nimport ImportExportHelp from '../ImportExportHelp';\n// import styled from 'styled-components';\n\ninterface ExportPluginButtonProps {\n  btnText: FormattedMessage.MessageDescriptor;\n  plugin: object;\n  fileName: string;\n  helpInfo?: FormattedMessage.MessageDescriptor;\n}\n\nclass ExportPluginButton extends React.PureComponent<\n  ExportPluginButtonProps,\n  {}\n> {\n  render() {\n    const { btnText, plugin, fileName, helpInfo } = this.props;\n    return (\n      <div>\n        {helpInfo && <ImportExportHelp bodyText={helpInfo} />}\n        <a\n          data-cy=\"export-plugin-button\"\n          className=\"btn btn-primary\"\n          href={`data:text/json;charset=utf-8,${encodeURIComponent(\n            JSON.stringify(plugin),\n          )}`}\n          download={`${fileName}.json`}\n        >\n          <DownloadIcon />\n          &nbsp;\n          <FormattedMessage {...btnText} />\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default ExportPluginButton;\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/ExportPluginButton/index.tsx","/**\n *\n * FlexModalHeader\n *\n */\n\nimport styled from 'styled-components';\nimport { ModalHeader } from 'reactstrap';\n\nconst FlexModalHeader = styled(ModalHeader)`\n  .modal-title {\n    display: flex;\n    width: 100%;\n  }\n`;\n\nexport default FlexModalHeader;\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/FlexModalHeader/index.tsx","/**\n *\n * ImportExportHelp\n *\n */\n\nimport React, { SFC } from 'react';\nimport { Label } from 'reactstrap';\nimport HelpPrimitive, { HelpProps } from 'components/HelpPrimitive';\nimport styled from 'styled-components';\n\nconst LabelWrap = styled(Label)`\n  margin-right: 0.5rem;\n`;\n\nconst ImportExportHelp: SFC<HelpProps> = (props) => {\n  return (\n    <LabelWrap className=\"text-muted\">\n      <HelpPrimitive bodyText={props.bodyText} />\n    </LabelWrap>\n  );\n};\n\nexport default ImportExportHelp;\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/ImportExportHelp/index.tsx","/**\n *\n * ImportPluginButton\n *\n */\n\nimport React from 'react';\nimport { UploadIcon } from '../Icons';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { CBDispatch } from 'cb-utils/typeUtils';\nimport {\n  addSuccessNotification,\n  addErrorNotification,\n} from 'containers/Portal/actions';\nimport ImportExportHelp from '../ImportExportHelp';\n// import styled from 'styled-components';\n\ninterface ImportPluginButtonProps {\n  btnText: FormattedMessage.MessageDescriptor;\n  shapeChecker: (plugin: any) => boolean;\n  onComplete: (plugin: any) => void;\n  successMsg: string;\n  badShapeMsg: string;\n  helpInfo?: FormattedMessage.MessageDescriptor;\n}\n\nexport class ImportPluginButton extends React.Component<\n  ImportPluginButtonProps & MapDispatchToProps,\n  {}\n> {\n  fileInput: HTMLInputElement = null;\n  render() {\n    const { btnText, helpInfo } = this.props;\n    return (\n      <div>\n        {helpInfo && <ImportExportHelp bodyText={helpInfo} />}\n        <label className=\"btn btn-primary\">\n          <UploadIcon />\n          &nbsp;\n          <FormattedMessage {...btnText} />\n          <input\n            data-cy=\"import-plugin-input\"\n            type=\"file\"\n            hidden\n            accept=\".json\"\n            onChange={this.importPlugin}\n            ref={(ref) => (this.fileInput = ref)}\n          />\n        </label>\n      </div>\n    );\n  }\n\n  importPlugin = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files[0];\n\n    const r = new FileReader();\n    r.onload = (theFile) => {\n      try {\n        const contents = JSON.parse(theFile.target.result);\n        if (this.props.shapeChecker(contents)) {\n          this.props.onComplete(contents);\n          this.props.onImportSuccess(this.props.successMsg);\n          this.fileInput.value = ''; // clear the value in case users try to import the same file\n        } else {\n          throw new Error(this.props.badShapeMsg);\n        }\n      } catch (err) {\n        this.props.onImportError(err.message);\n      }\n    };\n    r.readAsText(file);\n  };\n}\n\nconst mapDispatchToProps = (dispatch: CBDispatch) => ({\n  onImportSuccess: (msg: string) => dispatch(addSuccessNotification(msg)),\n  onImportError: (msg: string) => dispatch(addErrorNotification(msg)),\n});\n\ntype MapDispatchToProps = ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(null, mapDispatchToProps)(ImportPluginButton);\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/ImportPluginButton/index.tsx","/*\n * Console Messages\n *\n * This contains all the text for the Console component.\n */\nimport { defineMessages } from 'react-intl';\n\nconst mess = defineMessages({\n  header: {\n    id: 'app.containers.Console.header',\n    defaultMessage: 'This is Console container !',\n  },\n  deploy: {\n    id: 'app.containers.Console.deploy',\n    defaultMessage: 'Deploy',\n  },\n  sync: {\n    id: 'app.containers.Console.sync',\n    defaultMessage: 'Sync',\n  },\n  assetClassCode: {\n    id: 'app.components.DeploymentAssetManager.assetClassCode',\n    defaultMessage: 'Code',\n  },\n  assetClassServices: {\n    id: 'app.components.DeploymentAssetManager.assetClassServices',\n    defaultMessage: 'Services',\n  },\n  assetClassPortals: {\n    id: 'app.components.DeploymentAssetManager.assetClassPortals',\n    defaultMessage: 'Portals',\n  },\n  assetClassLibraries: {\n    id: 'app.components.DeploymentAssetManager.assetClassLibraries',\n    defaultMessage: 'Libraries',\n  },\n  assetClassTriggers: {\n    id: 'app.components.DeploymentAssetManager.assetClassTriggers',\n    defaultMessage: 'Triggers',\n  },\n  assetClassTimers: {\n    id: 'app.components.DeploymentAssetManager.assetClassTimers',\n    defaultMessage: 'Timers',\n  },\n  assetClassRoles: {\n    id: 'app.components.DeploymentAssetManager.assetClassRoles',\n    defaultMessage: 'Roles',\n  },\n  assetClassAdapters: {\n    id: 'app.components.DeploymentAssetManager.assetClassAdapters',\n    defaultMessage: 'Adapters',\n  },\n  assetClassPlugins: {\n    id: 'app.components.DeploymentAssetManager.assetClassPlugins',\n    defaultMessage: 'Plugins',\n  },\n  assetClassUsers: {\n    id: 'app.components.DeploymentAssetManager.assetClassUsers',\n    defaultMessage: 'Users',\n  },\n  assetClassDevices: {\n    id: 'app.components.DeploymentAssetManager.assetClassDevices',\n    defaultMessage: 'Devices',\n  },\n  assetClassCollections: {\n    id: 'app.components.DeploymentAssetManager.assetClassCollections',\n    defaultMessage: 'Collections',\n  },\n  assetClassDeployments: {\n    id: 'app.components.DeploymentAssetManager.assetClassDeployments',\n    defaultMessage: 'Deployments',\n  },\n  assetClassEdges: {\n    id: 'app.components.DeploymentAssetManager.assetClassEdges',\n    defaultMessage: 'Edges',\n  },\n  assetClassMessageHistory: {\n    id: 'app.components.DeploymentAssetManager.assetClassMessageHistory',\n    defaultMessage: 'Message History',\n  },\n  assetClassSystems: {\n    id: 'app.components.DeploymentAssetManager.assetClassSystems',\n    defaultMessage: 'Systems',\n  },\n  assetClassMessages: {\n    id: 'app.components.MessagesPage.messages',\n    defaultMessage: 'Messages',\n  },\n  messageTopics: {\n    id: 'app.components.RoleDetailPage.messageTopics',\n    defaultMessage: 'Message Topics',\n  },\n  readPermission: {\n    id: 'app.components.SimplePermissionsCard.read',\n    defaultMessage: 'Read',\n  },\n  createPermission: {\n    id: 'app.components.SimplePermissionsCard.create',\n    defaultMessage: 'Create',\n  },\n  updatePermission: {\n    id: 'app.components.SimplePermissionsCard.update',\n    defaultMessage: 'Update',\n  },\n  deletePermission: {\n    id: 'app.components.SimplePermissionsCard.delete',\n    defaultMessage: 'Delete',\n  },\n  runPermission: {\n    id: 'app.components.SimplePermissionsCard.run',\n    defaultMessage: 'Run',\n  },\n  subscribePermission: {\n    id: 'app.components.SimplePermissionsCard.subscribe',\n    defaultMessage: 'Subscribe',\n  },\n  publishPermission: {\n    id: 'app.components.SimplePermissionsCard.publish',\n    defaultMessage: 'Publish',\n  },\n  allPermissions: {\n    id: 'app.containers.Console.allPermissions',\n    defaultMessage: 'All',\n  },\n  name: {\n    id: 'app.containers.Console.name',\n    defaultMessage: 'Name',\n  },\n  description: {\n    id: 'app.containers.console.description',\n    defaultMessage: 'Description',\n  },\n  architecture: {\n    id: 'app.containers.AdaptersPage.architecture',\n    defaultMessage: 'Architecture',\n  },\n  discardChanges: {\n    id: 'app.containers.Console.discardChanges',\n    defaultMessage: 'Discard changes',\n  },\n  saveAndExit: {\n    id: 'app.containers.Console.saveAndExit',\n    defaultMessage: 'Save and exit',\n  },\n  errorNameRequired: {\n    id: 'app.components.NewEdgeModal.errorNameRequired',\n    defaultMessage: 'Required',\n  },\n  errorSpaces: {\n    id: 'app.components.NewEdgeModal.errorSpaces',\n    defaultMessage: 'Cannot have spaces',\n  },\n  errorSpecialCharacters: {\n    id: 'app.components.NewEdgeModal.errorSpecialCharacters',\n    defaultMessage: 'Cannot have special characters',\n  },\n  about: {\n    id: 'app.containers.Console.about',\n    defaultMessage: 'About',\n  },\n  advanced: {\n    id: 'app.containers.Console.advanced',\n    defaultMessage: 'Advanced',\n  },\n  cancel: {\n    id: 'app.containers.Console.cancel',\n    defaultMessage: 'Cancel',\n  },\n  close: {\n    id: 'app.containers.Console.close',\n    defaultMessage: 'Close',\n  },\n  summary: {\n    id: 'app.containers.Console.summary',\n    defaultMessage: 'Summary: ',\n  },\n  ipmImportError: {\n    id: 'app.containers.Console.ipmImportError',\n    defaultMessage: 'Import Error',\n  },\n});\n\nexport default mess;\n\n\n\n// WEBPACK FOOTER //\n// ./app/containers/Console/messages.ts"],"sourceRoot":""}