{"version":3,"sources":["webpack:///33.15468bac72d16556999c.chunk.js","webpack:///./app/plugins/widgets/SpeedometerWidget/ArcGauge.tsx","webpack:///./app/plugins/widgets/SpeedometerWidget/Gauge.tsx","webpack:///./node_modules/d3/d3.js"],"names":["webpackJsonp","./app/plugins/widgets/SpeedometerWidget/Gauge.tsx","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","Gauge__classCallCheck","Gauge__possibleConstructorReturn","Gauge__inherits","defineProperty","react","react_default","n","styled_components_browser_esm","d3_shape","d3","d3_default","uuid","uuid_default","getColorFill","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","ArcGauge_ArcGauge","_React$PureComponent","ArcGauge","this","_this","getPrototypeOf","apply","arguments","state","arrow","height","width","color","id","oldPerc","_animateArrow","el","perc","scope","progress","transition","delay","ease","duration","selectAll","tween","percentOfPercent","a","select","attr","_mkCmd","_drawArrow","append","_getPercentage","dataVal","maxVal","minVal","isNaN","val","Number","max","min","thetaRad","_percToRad","topX","Math","cos","topY","sin","PI","_percToDeg","_degToRad","deg","_deg2rad","renderArcGauge","maxValue","minValue","_this2","createElement","className","ref","_this3","_props","sectionColors","percentage","firstChild","removeChild","radius","sections","sectionsNum","sectionWidth","size","rotateAngle","arcStart","arcEnd","padStart","padEnd","arc","startAngle","endAngle","outerRadius","svg","meter","map","section","sectionIndex","index","sectionFill","sectionSpaces","innerRadius","label","text","labelText","PureComponent","defaultProps","SpeedometerWidget_ArcGauge","Gauge__createClass","Wrapper","withConfig","displayName","getClosest","obj","num","minDiff","ans","hasOwnProperty","numKey","m","abs","toString","widthsByBreakpoint","75","150","300","470","630","Gauge_Gauge","Gauge","_getArrowWidth","rad","closest","_getRadius","arrowColor","fill","./node_modules/d3/d3.js","exports","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","b","NaN","d3_number","x","d3_numeric","d3_bisector","compare","left","lo","hi","mid","right","d3_transposeLength","d","d3_range_integerScale","k","d3_class","ctor","properties","d3_Map","_","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","source","method","d3_vendorSymbol","object","name","charAt","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElementNS","createNS","d3_selectionRemove","parent","parentNode","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","format","hsl","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","intersection","φarc","d3_geo_clipCircle","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","d3_svg_arcOuterRadius","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","cancelId","cancel","tick","tweens","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined"],"mappings":"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","file":"33.15468bac72d16556999c.chunk.js","sourcesContent":["webpackJsonp([33],{\n\n/***/ \"./app/plugins/widgets/SpeedometerWidget/Gauge.tsx\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(\"./node_modules/react/index.js\");\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js\nvar styled_components_browser_esm = __webpack_require__(\"./node_modules/styled-components/dist/styled-components.browser.esm.js\");\n\n// EXTERNAL MODULE: ./node_modules/d3-shape/index.js + 52 modules\nvar d3_shape = __webpack_require__(\"./node_modules/d3-shape/index.js\");\n\n// EXTERNAL MODULE: ./node_modules/d3/d3.js\nvar d3 = __webpack_require__(\"./node_modules/d3/d3.js\");\nvar d3_default = /*#__PURE__*/__webpack_require__.n(d3);\n\n// EXTERNAL MODULE: ./node_modules/uuid/index.js\nvar uuid = __webpack_require__(\"./node_modules/uuid/index.js\");\nvar uuid_default = /*#__PURE__*/__webpack_require__.n(uuid);\n\n// EXTERNAL MODULE: ./app/cb-utils/getColorFill.ts\nvar getColorFill = __webpack_require__(\"./app/cb-utils/getColorFill.ts\");\n\n// CONCATENATED MODULE: ./app/plugins/widgets/SpeedometerWidget/ArcGauge.tsx\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\nvar ArcGauge_ArcGauge = function (_React$PureComponent) {\n    _inherits(ArcGauge, _React$PureComponent);\n\n    function ArcGauge() {\n        _classCallCheck(this, ArcGauge);\n\n        var _this = _possibleConstructorReturn(this, (ArcGauge.__proto__ || Object.getPrototypeOf(ArcGauge)).apply(this, arguments));\n\n        _this.state = {\n            arrow: {\n                height: 55,\n                width: 5,\n                color: '#a5a5a5'\n            }\n        };\n        _this.id = uuid_default()();\n        _this.oldPerc = 0;\n        _this._animateArrow = function (el, perc, oldPerc, width, height) {\n            // tslint:disable-next-line\n            var scope = _this;\n            var progress = void 0;\n            return el.transition().delay(250)\n            // @ts-ignore\n            .ease('elastic').duration(2000).selectAll('.gauge-arrow').tween('progress', function () {\n                return function (percentOfPercent) {\n                    progress = oldPerc + percentOfPercent * (perc - oldPerc);\n                    return d3_default.a.select(this).attr('d', scope._mkCmd(width, height, progress));\n                };\n            });\n        };\n        _this._drawArrow = function (el, perc, color, width, height) {\n            el.append('circle').attr('class', 'gauge-arrow-center').attr('cx', 0).attr('cy', 0).attr('fill', color).attr('r', width);\n            return el.append('path').attr('class', 'gauge-arrow').attr('fill', color).attr('d', _this._mkCmd(width, height, perc));\n        };\n        _this._getPercentage = function (dataVal, maxVal, minVal) {\n            if (dataVal && !isNaN(dataVal)) {\n                var val = Number(dataVal);\n                var max = Number(maxVal);\n                var min = Number(minVal);\n                if (val > max) {\n                    return 100;\n                }\n                if (val < min) {\n                    return 0;\n                }\n                if (min < 0 && max < 0) {\n                    if (val < min) {\n                        return 0;\n                    } else {\n                        return (-min + val) / (-min + max) * 100;\n                    }\n                }\n                if (min < 0 && max >= 0) {\n                    if (val < min) {\n                        return 0;\n                    } else if (val < 0) {\n                        return (-min + val) / (-min + max) * 100;\n                    } else {\n                        return (-min + val) / (-min + max) * 100;\n                    }\n                }\n                return val / max * 100;\n            }\n            return 0;\n        };\n        _this._mkCmd = function (width, height, perc) {\n            var thetaRad = _this._percToRad(perc / 2);\n            var centerX = 0;\n            var centerY = 0;\n            var topX = centerX - height * Math.cos(thetaRad);\n            var topY = centerY - height * Math.sin(thetaRad);\n            var leftX = centerX - width * Math.cos(thetaRad - Math.PI / 2);\n            var leftY = centerY - width * Math.sin(thetaRad - Math.PI / 2);\n            var rightX = centerX - width * Math.cos(thetaRad + Math.PI / 2);\n            var rightY = centerY - width * Math.sin(thetaRad + Math.PI / 2);\n            return 'M ' + leftX + ' ' + leftY + ' L ' + topX + ' ' + topY + ' L ' + rightX + ' ' + rightY;\n        };\n        _this._percToDeg = function (perc) {\n            return perc * 360;\n        };\n        _this._percToRad = function (perc) {\n            return _this._degToRad(_this._percToDeg(perc));\n        };\n        _this._degToRad = function (deg) {\n            return deg * Math.PI / 180.5;\n        };\n        _this._deg2rad = function (deg) {\n            return deg / 180 * Math.PI;\n        };\n        return _this;\n    }\n\n    _createClass(ArcGauge, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            return this.renderArcGauge();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            return this.renderArcGauge();\n        }\n    }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps() {\n            this.oldPerc = this._getPercentage(Number(this.props.value), this.props.maxValue, this.props.minValue) * 0.01;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            return react_default.a.createElement(\"div\", { className: this.id + '-gauge-el', ref: function ref(el) {\n                    // @ts-ignore\n                    _this2.el = el;\n                } });\n        }\n    }, {\n        key: 'renderArcGauge',\n        value: function renderArcGauge() {\n            var _this3 = this;\n\n            // @ts-ignore\n            var el = this.el;\n            var _props = this.props,\n                value = _props.value,\n                width = _props.width,\n                height = _props.height,\n                minValue = _props.minValue,\n                maxValue = _props.maxValue,\n                sectionColors = _props.sectionColors;\n\n            var percentage = this._getPercentage(Number(value), maxValue, minValue);\n            while (el.firstChild) {\n                el.removeChild(el.firstChild);\n            }\n            // Values: provided styles || default styles\n            var offset = 30;\n            var radius = this.props.radius - offset;\n            var sections = this.props.sections;\n            var sectionsNum = this.props.sections.length;\n            var sectionWidth = this.props.size;\n            var rotateAngle = 0.75;\n            var sectionSpaces = 0.05;\n            var arrow = this.props.arrow || this.state.arrow;\n            var arcStart = void 0;\n            var arcEnd = void 0;\n            var padStart = void 0;\n            var padEnd = void 0;\n            // Draw svg\n            var arc = Object(d3_shape[\"a\" /* arc */])().startAngle(this._deg2rad(-80)).endAngle(this._deg2rad(80)).outerRadius(height);\n            var svg = d3_default.a.select(el).append('svg').attr('width', width).attr('height', height).append('g').attr('transform', 'translate(' + width / 2 + ',' + (height - offset) + ')');\n            var meter = svg.append('g').attr('class', 'progress-meter');\n            // Generate path\n            sections.map(function (section, sectionIndex) {\n                var index = sectionIndex + 1;\n                var sectionFill = section.percentage * 0.01 / 2;\n                arcStart = _this3._percToRad(rotateAngle);\n                arcEnd = arcStart + _this3._percToRad(sectionFill);\n                rotateAngle += sectionFill;\n                padStart = 0 ? 0 : sectionSpaces / 2;\n                padEnd = sectionsNum ? 0 : sectionSpaces / 2;\n                arc = Object(d3_shape[\"a\" /* arc */])().outerRadius(radius).innerRadius(radius - sectionWidth).startAngle(arcStart + padStart).endAngle(arcEnd - padEnd);\n                meter.append('path').attr('d', arc).attr('id', _this3.id + '-gauge-path-' + index).attr('class', _this3.id + '-gauge-section-' + index).attr('fill', Object(getColorFill[\"a\" /* default */])(sectionColors, sectionIndex, 'fill'));\n                // Legend\n                if (section.label) {\n                    var legendText = meter.append('text').attr('x', 10).attr('dy', 35);\n                    legendText.append('textPath').attr('class', _this3.id + '-gauge-text').attr('xlink:href', '#' + _this3.id + '-gauge-path-' + index).text(section.label);\n                }\n            });\n            // Label\n            var labelText = meter.append('text').attr('class', this.id + '-gauge-label').attr('text-anchor', 'middle').attr('dy', '1.8em').attr('fill', '#515151');\n            meter.append('text').attr('class', this.id + '-gauge-min').attr('x', '-' + radius).attr('text-anchor', 'start').attr('dy', '1.8em').attr('fill', '#515151').text(minValue);\n            meter.append('text').attr('class', this.id + '-gauge-min').attr('x', radius).attr('text-anchor', 'end').attr('dy', '1.8em').attr('fill', '#515151').text(maxValue);\n            labelText.text(value);\n            // Draw and animate arrow with default or provided styles\n            this._drawArrow(meter, this.oldPerc, arrow.color, arrow.width, arrow.height - offset);\n            this._animateArrow(meter, percentage * 0.01, this.oldPerc, arrow.width, arrow.height - offset);\n            meter.transition();\n            return meter;\n        }\n    }]);\n\n    return ArcGauge;\n}(react_default.a.PureComponent);\n\nArcGauge_ArcGauge.defaultProps = {\n    width: '100%',\n    arrow: {\n        height: 55,\n        width: 5,\n        color: '#a5a5a5'\n    }\n};\n/* harmony default export */ var SpeedometerWidget_ArcGauge = (ArcGauge_ArcGauge);\n// CONCATENATED MODULE: ./app/plugins/widgets/SpeedometerWidget/Gauge.tsx\nvar Gauge__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction Gauge__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Gauge__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction Gauge__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\nvar Wrapper = styled_components_browser_esm[\"b\" /* default */].section.withConfig({\n    displayName: 'Gauge__Wrapper'\n})(['position: relative;top: -5px;padding: 0;margin: 0;&-label {position: relative;top: 12px;padding: 0 10px 0 0;text-align: center;}&-el {svg {overflow: visible !important}}&-path {position: relative}&-text {letter-spacing 3px}']);\nvar getClosest = function getClosest(obj, num) {\n    var minDiff = 1000;\n    var ans = void 0;\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            var numKey = Number(key);\n            var m = Math.abs(num - numKey);\n            if (m < minDiff) {\n                minDiff = m;\n                ans = numKey;\n            }\n        }\n    }\n    return ans.toString();\n};\nvar widthsByBreakpoint = {\n    '75': 3,\n    '150': 6,\n    '300': 12,\n    '470': 15,\n    '630': 18\n};\n\nvar Gauge_Gauge = function (_React$PureComponent) {\n    Gauge__inherits(Gauge, _React$PureComponent);\n\n    function Gauge() {\n        Gauge__classCallCheck(this, Gauge);\n\n        var _this = Gauge__possibleConstructorReturn(this, (Gauge.__proto__ || Object.getPrototypeOf(Gauge)).apply(this, arguments));\n\n        _this._getArrowWidth = function (rad) {\n            var closest = getClosest(widthsByBreakpoint, rad);\n            return widthsByBreakpoint[closest];\n        };\n        _this._getRadius = function () {\n            // because width must contain entire circumference, compare (width / 2) with height to get correct radius\n            return _this.props.width / 2 < _this.props.height ? _this.props.width / 2 : _this.props.height;\n        };\n        return _this;\n    }\n\n    Gauge__createClass(Gauge, [{\n        key: 'render',\n        value: function render() {\n            var radius = this._getRadius();\n            var arrow = {\n                color: this.props.arrowColor,\n                height: radius,\n                width: this._getArrowWidth(radius)\n            };\n            return react_default.a.createElement(Wrapper, null, react_default.a.createElement(SpeedometerWidget_ArcGauge, { value: this.props.value, minValue: this.props.minValue, maxValue: this.props.maxValue, size: this.props.size, radius: radius, sections: this.props.sections, sectionColors: this.props.sectionColors, arrow: arrow, label: this.props.label, width: this.props.width, height: this.props.height }));\n        }\n    }]);\n\n    return Gauge;\n}(react_default.a.PureComponent);\n\nGauge_Gauge.defaultProps = {\n    value: 0,\n    size: 15,\n    radius: 85,\n    sectionColors: [{ fill: '#ccc' }, { fill: '#999' }, { fill: '#444' }],\n    arrowColor: null,\n    label: null\n};\n/* harmony default export */ var SpeedometerWidget_Gauge = __webpack_exports__[\"default\"] = (Gauge_Gauge);\n\n/***/ }),\n\n/***/ \"./node_modules/d3/d3.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 33.15468bac72d16556999c.chunk.js","import React from 'react';\nimport { arc as d3Arc } from 'd3-shape';\nimport d3, { BaseType } from 'd3';\nimport uuid from 'uuid';\n\nimport getColorFill from '../../../cb-utils/getColorFill';\nimport { GaugeProps } from 'plugins/widgets/SpeedometerWidget/Gauge';\nimport { Selection } from 'd3-selection';\n\ninterface ArcGaugeProps extends GaugeProps {\n  arrow: { color: string; height: number; width: number };\n}\n\nclass ArcGauge extends React.PureComponent<ArcGaugeProps, {}> {\n  static defaultProps = {\n    width: '100%',\n    arrow: {\n      height: 55,\n      width: 5,\n      color: '#a5a5a5',\n    },\n  };\n\n  state = {\n    arrow: {\n      height: 55,\n      width: 5,\n      color: '#a5a5a5',\n    },\n  };\n\n  id = uuid();\n  oldPerc = 0;\n\n  componentDidMount() {\n    return this.renderArcGauge();\n  }\n\n  componentDidUpdate() {\n    return this.renderArcGauge();\n  }\n\n  componentWillReceiveProps() {\n    this.oldPerc =\n      this._getPercentage(\n        Number(this.props.value),\n        this.props.maxValue,\n        this.props.minValue,\n      ) * 0.01;\n  }\n\n  render() {\n    return (\n      <div\n        className={`${this.id}-gauge-el`}\n        ref={(el) => {\n          // @ts-ignore\n          this.el = el;\n        }}\n      />\n    );\n  }\n\n  renderArcGauge() {\n    // @ts-ignore\n    const el = this.el;\n    const {\n      value,\n      width,\n      height,\n      minValue,\n      maxValue,\n      sectionColors,\n    } = this.props;\n\n    const percentage = this._getPercentage(Number(value), maxValue, minValue);\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n\n    // Values: provided styles || default styles\n    const offset = 30;\n    const radius = this.props.radius - offset;\n    const sections = this.props.sections;\n    const sectionsNum = this.props.sections.length;\n    const sectionWidth = this.props.size;\n    let rotateAngle = 0.75;\n    const sectionSpaces = 0.05;\n    const arrow = this.props.arrow || this.state.arrow;\n    let arcStart;\n    let arcEnd;\n    let padStart;\n    let padEnd;\n\n    // Draw svg\n    let arc = d3Arc()\n      .startAngle(this._deg2rad(-80))\n      .endAngle(this._deg2rad(80))\n      .outerRadius(height);\n\n    const svg = d3\n      .select(el)\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', `translate(${width / 2},${height - offset})`);\n\n    const meter = svg.append('g').attr('class', 'progress-meter');\n\n    // Generate path\n    sections.map((section, sectionIndex) => {\n      const index = sectionIndex + 1;\n      const sectionFill = section.percentage * 0.01 / 2;\n      arcStart = this._percToRad(rotateAngle);\n      arcEnd = arcStart + this._percToRad(sectionFill);\n      rotateAngle += sectionFill;\n      padStart = 0 ? 0 : sectionSpaces / 2;\n      padEnd = sectionsNum ? 0 : sectionSpaces / 2;\n\n      arc = d3Arc()\n        .outerRadius(radius)\n        .innerRadius(radius - sectionWidth)\n        .startAngle(arcStart + padStart)\n        .endAngle(arcEnd - padEnd);\n\n      meter\n        .append('path')\n        .attr('d', arc)\n        .attr('id', `${this.id}-gauge-path-${index}`)\n        .attr('class', `${this.id}-gauge-section-${index}`)\n        .attr('fill', getColorFill(sectionColors, sectionIndex, 'fill'));\n\n      // Legend\n      if (section.label) {\n        const legendText = meter\n          .append('text')\n          .attr('x', 10)\n          .attr('dy', 35);\n\n        legendText\n          .append('textPath')\n          .attr('class', `${this.id}-gauge-text`)\n          .attr('xlink:href', `#${this.id}-gauge-path-${index}`)\n          .text(section.label);\n      }\n    });\n\n    // Label\n    const labelText = meter\n      .append('text')\n      .attr('class', `${this.id}-gauge-label`)\n      .attr('text-anchor', 'middle')\n      .attr('dy', '1.8em')\n      .attr('fill', '#515151');\n\n    meter\n      .append('text')\n      .attr('class', `${this.id}-gauge-min`)\n      .attr('x', `-${radius}`)\n      .attr('text-anchor', 'start')\n      .attr('dy', '1.8em')\n      .attr('fill', '#515151')\n      .text(minValue);\n\n    meter\n      .append('text')\n      .attr('class', `${this.id}-gauge-min`)\n      .attr('x', radius)\n      .attr('text-anchor', 'end')\n      .attr('dy', '1.8em')\n      .attr('fill', '#515151')\n      .text(maxValue);\n\n    labelText.text(value);\n\n    // Draw and animate arrow with default or provided styles\n    this._drawArrow(\n      meter,\n      this.oldPerc,\n      arrow.color,\n      arrow.width,\n      arrow.height - offset,\n    );\n    this._animateArrow(\n      meter,\n      percentage * 0.01,\n      this.oldPerc,\n      arrow.width,\n      arrow.height - offset,\n    );\n\n    meter.transition();\n\n    return meter;\n  }\n\n  _animateArrow = (\n    el: Selection<BaseType, {}, null, undefined>,\n    perc: number,\n    oldPerc: number,\n    width: number,\n    height: number,\n  ) => {\n    // tslint:disable-next-line\n    const scope = this;\n    let progress: number;\n    return (\n      el\n        .transition()\n        .delay(250)\n        // @ts-ignore\n        .ease('elastic')\n        .duration(2000)\n        .selectAll(`.gauge-arrow`)\n        .tween('progress', () => {\n          return function(percentOfPercent: number) {\n            progress = oldPerc + percentOfPercent * (perc - oldPerc);\n            return d3\n              .select(this)\n              .attr('d', scope._mkCmd(width, height, progress));\n          };\n        })\n    );\n  };\n\n  _drawArrow = (\n    el: Selection<BaseType, {}, null, undefined>,\n    perc: number,\n    color: string,\n    width: number,\n    height: number,\n  ) => {\n    el\n      .append('circle')\n      .attr('class', 'gauge-arrow-center')\n      .attr('cx', 0)\n      .attr('cy', 0)\n      .attr('fill', color)\n      .attr('r', width);\n\n    return el\n      .append('path')\n      .attr('class', 'gauge-arrow')\n      .attr('fill', color)\n      .attr('d', this._mkCmd(width, height, perc));\n  };\n\n  _getPercentage = (dataVal: number, maxVal: number, minVal: number) => {\n    if (dataVal && !isNaN(dataVal)) {\n      const val = Number(dataVal);\n      const max = Number(maxVal);\n      const min = Number(minVal);\n      if (val > max) {\n        return 100;\n      }\n      if (val < min) {\n        return 0;\n      }\n      if (min < 0 && max < 0) {\n        if (val < min) {\n          return 0;\n        } else {\n          return (-min + val) / (-min + max) * 100;\n        }\n      }\n      if (min < 0 && max >= 0) {\n        if (val < min) {\n          return 0;\n        } else if (val < 0) {\n          return (-min + val) / (-min + max) * 100;\n        } else {\n          return (-min + val) / (-min + max) * 100;\n        }\n      }\n      return val / max * 100;\n    }\n    return 0;\n  };\n\n  _mkCmd = (width: number, height: number, perc: number) => {\n    const thetaRad = this._percToRad(perc / 2);\n    const centerX = 0;\n    const centerY = 0;\n    const topX = centerX - height * Math.cos(thetaRad);\n    const topY = centerY - height * Math.sin(thetaRad);\n    const leftX = centerX - width * Math.cos(thetaRad - Math.PI / 2);\n    const leftY = centerY - width * Math.sin(thetaRad - Math.PI / 2);\n    const rightX = centerX - width * Math.cos(thetaRad + Math.PI / 2);\n    const rightY = centerY - width * Math.sin(thetaRad + Math.PI / 2);\n    return (\n      'M ' +\n      leftX +\n      ' ' +\n      leftY +\n      ' L ' +\n      topX +\n      ' ' +\n      topY +\n      ' L ' +\n      rightX +\n      ' ' +\n      rightY\n    );\n  };\n\n  _percToDeg = (perc: number) => {\n    return perc * 360;\n  };\n\n  _percToRad = (perc: number) => {\n    return this._degToRad(this._percToDeg(perc));\n  };\n\n  _degToRad = (deg: number) => {\n    return deg * Math.PI / 180.5;\n  };\n\n  _deg2rad = (deg: number) => {\n    return deg / 180 * Math.PI;\n  };\n}\n\nexport default ArcGauge;\n\n\n\n// WEBPACK FOOTER //\n// ./app/plugins/widgets/SpeedometerWidget/ArcGauge.tsx","import React from 'react';\nimport styled from 'styled-components';\n\nimport ArcGauge from './ArcGauge';\nimport { SpeedometerSettings } from 'plugins/widgets/SpeedometerWidget/def';\n\nconst Wrapper = styled.section`\n  position: relative;\n  top: -5px;\n  padding: 0;\n  margin: 0;\n\n  &-label {\n    position: relative;\n    top: 12px;\n    padding: 0 10px 0 0;\n    text-align: center;\n  }\n\n  &-el {\n\n    svg {\n      overflow: visible !important\n    }\n  }\n\n  &-path {\n    position: relative\n  }\n\n  &-text {\n    letter-spacing 3px\n  }\n`;\n\nconst getClosest = (obj: WidthsByBreakpoint, num: number) => {\n  let minDiff = 1000;\n  let ans;\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      const numKey: number = Number(key);\n      const m = Math.abs(num - numKey);\n      if (m < minDiff) {\n        minDiff = m;\n        ans = numKey;\n      }\n    }\n  }\n  return ans.toString();\n};\n\ninterface WidthsByBreakpoint {\n  '75': 3;\n  '150': 6;\n  '300': 12;\n  '470': 15;\n  '630': 18;\n}\n\nconst widthsByBreakpoint: WidthsByBreakpoint = {\n  '75': 3,\n  '150': 6,\n  '300': 12,\n  '470': 15,\n  '630': 18,\n};\n\nexport interface GaugeProps extends SpeedometerSettings {\n  size: number;\n  radius: number;\n  width: number;\n  height: number;\n  value: number | string;\n}\n\nclass Gauge extends React.PureComponent<GaugeProps, {}> {\n  static defaultProps: Partial<GaugeProps> = {\n    value: 0,\n    size: 15,\n    radius: 85,\n    sectionColors: [{ fill: '#ccc' }, { fill: '#999' }, { fill: '#444' }],\n    arrowColor: null,\n    label: null,\n  };\n\n  render() {\n    const radius = this._getRadius();\n    const arrow = {\n      color: this.props.arrowColor,\n      height: radius,\n      width: this._getArrowWidth(radius),\n    };\n    return (\n      <Wrapper>\n        <ArcGauge\n          value={this.props.value}\n          minValue={this.props.minValue}\n          maxValue={this.props.maxValue}\n          size={this.props.size}\n          radius={radius}\n          sections={this.props.sections}\n          sectionColors={this.props.sectionColors}\n          arrow={arrow}\n          label={this.props.label}\n          width={this.props.width}\n          height={this.props.height}\n        />\n      </Wrapper>\n    );\n  }\n\n  _getArrowWidth = (rad: number) => {\n    const closest = getClosest(widthsByBreakpoint, rad);\n    return widthsByBreakpoint[closest as keyof WidthsByBreakpoint];\n  };\n\n  _getRadius = () => {\n    // because width must contain entire circumference, compare (width / 2) with height to get correct radius\n    return this.props.width / 2 < this.props.height\n      ? this.props.width / 2\n      : this.props.height;\n  };\n}\n\nexport default Gauge;\n\n\n\n// WEBPACK FOOTER //\n// ./app/plugins/widgets/SpeedometerWidget/Gauge.tsx","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3/d3.js\n// module id = ./node_modules/d3/d3.js\n// module chunks = 33 34"],"sourceRoot":""}