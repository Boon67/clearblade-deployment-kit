{"version":3,"sources":["webpack:///34.b7403eeff0046c3b894d.chunk.js","webpack:///./app/plugins/widgets/RadialGaugeWidget/Gauge.tsx","webpack:///./node_modules/d3/d3.js"],"names":["webpackJsonp","./app/plugins/widgets/RadialGaugeWidget/Gauge.tsx","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_d3__","__WEBPACK_IMPORTED_MODULE_1_d3___default","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","_typeof","Symbol","iterator","obj","_createClass","defineProperties","props","descriptor","protoProps","staticProps","Gauge","_React$PureComponent","this","_this","getPrototypeOf","apply","oldValue","_getSmallerDimension","height","width","_getPathValues","smallerDimension","getAlpha","fra","Math","PI","alpha","numVal","Number","numMin","min","numMax","max","Ro","Ri","Cx","Cy","Xo","cos","Yo","sin","Xi","Yi","_getPath","_this$_getPathValues","path","_renderLabel","el","x","y","style","text","append","attr","textAnchor","fontSize","fontStyle","fontVariant","fontWeight","fontStretch","lineHeight","fillOpacity","_animateGauge","scope","progress","transition","delay","duration","selectAll","tween","t","a","select","_drawGauge","color","_getPercentage","dataVal","maxVal","minVal","isNaN","val","renderRadialGauge","topLabelStyle","valueLabelStyle","minMaxLabelStyle","svgStyle","overflow","position","left","top","firstChild","removeChild","svg","backgroundColor","label","_this2","createElement","ref","PureComponent","defaultProps","fill","stroke","./node_modules/d3/d3.js","exports","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","b","NaN","d3_number","d3_numeric","d3_bisector","compare","lo","hi","mid","right","d3_transposeLength","d","d3_range_integerScale","k","d3_class","ctor","properties","d3_Map","_","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","method","d3_vendorSymbol","object","name","charAt","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElementNS","createNS","d3_selectionRemove","parent","parentNode","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","margin","padding","border","ctm","getScreenCTM","f","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","toString","format","hsl","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","then","Date","now","time","timer","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","cancelId","cancel","tick","tweens","ease","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined"],"mappings":"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","file":"34.b7403eeff0046c3b894d.chunk.js","sourcesContent":["webpackJsonp([34],{\n\n/***/ \"./app/plugins/widgets/RadialGaugeWidget/Gauge.tsx\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(\"./node_modules/react/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_d3__ = __webpack_require__(\"./node_modules/d3/d3.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_d3__);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\nvar Gauge = function (_React$PureComponent) {\n    _inherits(Gauge, _React$PureComponent);\n\n    function Gauge() {\n        _classCallCheck(this, Gauge);\n\n        var _this = _possibleConstructorReturn(this, (Gauge.__proto__ || Object.getPrototypeOf(Gauge)).apply(this, arguments));\n\n        _this.oldValue = 0;\n        _this._getSmallerDimension = function () {\n            return _this.props.height < _this.props.width ? _this.props.height : _this.props.width;\n        };\n        _this._getPathValues = function (value) {\n            var dx = 0;\n            var dy = 0;\n            var smallerDimension = _this._getSmallerDimension();\n            var getAlpha = function getAlpha(fra) {\n                return (1 - fra) * Math.PI;\n            };\n            var alpha = void 0;\n            var numVal = Number(value);\n            var numMin = Number(_this.props.min);\n            var numMax = Number(_this.props.max);\n            if (numVal > numMax) {\n                alpha = getAlpha(1);\n            } else if (numVal < numMin) {\n                alpha = getAlpha(0);\n            } else if (numMin < 0 && numMax < 0) {\n                if (numVal < numMin) {\n                    alpha = getAlpha(0);\n                } else {\n                    alpha = getAlpha((-numMin + numVal) / (-numMin + numMax));\n                }\n            } else if (numMin < 0 && numMax >= 0) {\n                if (numVal < numMin) {\n                    alpha = getAlpha(0);\n                } else if (numVal < 0) {\n                    alpha = getAlpha((-numMin + numVal) / (-numMin + numMax));\n                } else {\n                    alpha = getAlpha((-numMin + numVal) / (-numMin + numMax));\n                }\n            } else {\n                alpha = getAlpha(numVal / numMax);\n            }\n            var Ro = _this.props.height * 1.3 < _this.props.width ? _this.props.height / 1.4 - _this.props.height / 10 : _this.props.width / 2 - _this.props.width / 10;\n            var Ri = Ro - smallerDimension / 5;\n            var Cx = _this.props.width / 2 + dx;\n            var Cy = _this.props.height / 1.25 + dy;\n            var Xo = _this.props.width / 2 + dx + Ro * Math.cos(alpha);\n            var Yo = _this.props.height - (_this.props.height - Cy) - Ro * Math.sin(alpha);\n            var Xi = _this.props.width / 2 + dx + Ri * Math.cos(alpha);\n            var Yi = _this.props.height - (_this.props.height - Cy) - Ri * Math.sin(alpha);\n            return { alpha: alpha, Ro: Ro, Ri: Ri, Cx: Cx, Cy: Cy, Xo: Xo, Yo: Yo, Xi: Xi, Yi: Yi };\n        };\n        _this._getPath = function (value) {\n            var _this$_getPathValues = _this._getPathValues(value),\n                Ro = _this$_getPathValues.Ro,\n                Ri = _this$_getPathValues.Ri,\n                Cx = _this$_getPathValues.Cx,\n                Cy = _this$_getPathValues.Cy,\n                Xo = _this$_getPathValues.Xo,\n                Yo = _this$_getPathValues.Yo,\n                Xi = _this$_getPathValues.Xi,\n                Yi = _this$_getPathValues.Yi;\n\n            var path = 'M' + (Cx - Ri) + ',' + Cy + ' ';\n            path += 'L' + (Cx - Ro) + ',' + Cy + ' ';\n            path += 'A' + Ro + ',' + Ro + ' 0 0 1 ' + Xo + ',' + Yo + ' ';\n            path += 'L' + Xi + ',' + Yi + ' ';\n            path += 'A' + Ri + ',' + Ri + ' 0 0 0 ' + (Cx - Ri) + ',' + Cy + ' ';\n            path += 'Z ';\n            return path;\n        };\n        _this._renderLabel = function (el, x, y, style, text) {\n            return el.append('text').attr('x', x).attr('y', y)\n            // @ts-ignore\n            .style(style)\n            // These styles have to be added individually because d3 can't seem to recognize inline styles\n            .style('text-anchor', style.textAnchor).style('font-size', style.fontSize).style('font-style', style.fontStyle).style('font-variant', style.fontVariant).style('font-weight', style.fontWeight).style('font-stretch', style.fontStretch).style('line-height', style.lineHeight).style('fill-opacity', style.fillOpacity).text(text);\n        };\n        _this._animateGauge = function (el, value, oldValue) {\n            // @ts-ignore\n            // tslint:disable-next-line\n            var scope = _this;\n            var progress = void 0;\n            return el.transition().delay(250)\n            // .ease('elastic') // Not sure if we should use this effect\n            .duration(700).selectAll('.gauge-value').tween('progress', function () {\n                return function (t) {\n                    progress = oldValue + t * (value - oldValue);\n                    return __WEBPACK_IMPORTED_MODULE_1_d3___default.a.select(this).attr('d', scope._getPath(progress));\n                };\n            });\n        };\n        _this._drawGauge = function (el, value, color) {\n            return el.append('path').attr('class', 'gauge-value').attr('fill', color).attr('stroke', 'none').attr('d', _this._getPath(value));\n        };\n        _this._getPercentage = function (dataVal, maxVal, minVal) {\n            if (dataVal && !isNaN(dataVal)) {\n                var val = Number(dataVal);\n                var max = Number(maxVal);\n                var min = Number(minVal);\n                if (val > max) {\n                    return 100;\n                }\n                if (val < min) {\n                    return 0;\n                }\n                if (min < 0 && max < 0) {\n                    if (val < min) {\n                        return 0;\n                    } else {\n                        return (-min + val) / (-min + max) * 100;\n                    }\n                }\n                if (min < 0 && max >= 0) {\n                    if (val < min) {\n                        return 0;\n                    } else if (val < 0) {\n                        return (-min + val) / (-min + max) * 100;\n                    } else {\n                        return (-min + val) / (-min + max) * 100;\n                    }\n                }\n                return val / max * 100;\n            }\n            return 0;\n        };\n        return _this;\n    }\n\n    _createClass(Gauge, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            return this.renderRadialGauge();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            return this.renderRadialGauge();\n        }\n    }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps() {\n            this.oldValue = this._getPercentage(Number(this.props.value), this.props.max, this.props.min);\n            this._getPercentage(this.props.value, this.props.max, this.props.min);\n        }\n    }, {\n        key: 'renderRadialGauge',\n        value: function renderRadialGauge() {\n            var value = _typeof(this.props.value) === 'object' ? '' : this.props.value;\n            var smallerDimension = this._getSmallerDimension();\n            var topLabelStyle = this.props.topLabelStyle.fontSize ? this.props.topLabelStyle : _extends({}, this.props.topLabelStyle, { fontSize: smallerDimension / 10 });\n            var valueLabelStyle = this.props.valueLabelStyle.fontSize ? this.props.valueLabelStyle : _extends({}, this.props.valueLabelStyle, { fontSize: smallerDimension / 4 });\n            var minMaxLabelStyle = this.props.minMaxLabelStyle.fontSize ? this.props.minMaxLabelStyle : _extends({}, this.props.minMaxLabelStyle, { fontSize: smallerDimension / 12 });\n\n            var _getPathValues = this._getPathValues(this.props.max),\n                Cx = _getPathValues.Cx,\n                Ro = _getPathValues.Ro,\n                Ri = _getPathValues.Ri,\n                Xo = _getPathValues.Xo,\n                Cy = _getPathValues.Cy,\n                Xi = _getPathValues.Xi;\n\n            var svgStyle = {\n                width: this.props.width,\n                height: this.props.height,\n                overflow: 'hidden',\n                position: 'relative',\n                left: 0,\n                top: 0\n            };\n            // @ts-ignore - el exists on class\n            var el = this.el;\n            while (el.firstChild) {\n                el.removeChild(el.firstChild);\n            }\n            var svg = __WEBPACK_IMPORTED_MODULE_1_d3___default.a.select(el).append('svg').attr('width', this.props.width).attr('height', this.props.height)\n            // @ts-ignore\n            .style(svgStyle);\n            // Max portion\n            svg.append('path').attr('fill', this.props.backgroundColor).attr('stroke', 'none').attr('d', this._getPath(this.props.max));\n            // Label\n            this._renderLabel(svg, this.props.width / 2, this.props.height / 8, topLabelStyle, this.props.label);\n            // Value label\n            this._renderLabel(svg, this.props.width / 2, this.props.height / 5 * 4.2, valueLabelStyle, value);\n            // Min label\n            this._renderLabel(svg, (Cx - Ro + (Cx - Ri)) / 2, Cy + smallerDimension / 10, minMaxLabelStyle, this.props.min);\n            // Max label\n            this._renderLabel(svg, (Xo + Xi) / 2, Cy + smallerDimension / 10, minMaxLabelStyle, this.props.max);\n            this._drawGauge(svg, this.oldValue, this.props.color);\n            this._animateGauge(svg, Number(value), this.oldValue);\n            svg.transition();\n            return svg;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", { ref: function ref(el) {\n                    // @ts-ignore - el exists\n                    _this2.el = el;\n                } });\n        }\n    }]);\n\n    return Gauge;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.PureComponent);\n\nGauge.defaultProps = {\n    label: 'React SVG Gauge',\n    min: 0,\n    max: 100,\n    value: 0,\n    width: 400,\n    height: 320,\n    color: '#fe0400',\n    backgroundColor: '#edebeb',\n    topLabelStyle: {\n        textAnchor: 'middle',\n        fill: '#999999',\n        stroke: 'none',\n        fontStyle: 'normal',\n        fontVariant: 'normal',\n        fontWeight: 'bold',\n        fontStretch: 'normal',\n        lineHeight: 'normal',\n        fillOpacity: 1\n    },\n    valueLabelStyle: {\n        textAnchor: 'middle',\n        fill: '#010101',\n        stroke: 'none',\n        fontStyle: 'normal',\n        fontVariant: 'normal',\n        fontWeight: 'bold',\n        fontStretch: 'normal',\n        lineHeight: 'normal',\n        fillOpacity: 1\n    },\n    minMaxLabelStyle: {\n        textAnchor: 'middle',\n        fill: '#999999',\n        stroke: 'none',\n        fontStyle: 'normal',\n        fontVariant: 'normal',\n        fontWeight: 'normal',\n        fontStretch: 'normal',\n        lineHeight: 'normal',\n        fillOpacity: 1\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Gauge);\n\n/***/ }),\n\n/***/ \"./node_modules/d3/d3.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 34.b7403eeff0046c3b894d.chunk.js","import React from 'react';\nimport d3, { BaseType } from 'd3';\nimport { Selection } from 'd3-selection';\n\ninterface LabelStyle {\n  textAnchor: string;\n  fill: string;\n  stroke: string;\n  fontStyle: string;\n  fontVariant: string;\n  fontWeight: string;\n  fontStretch: string;\n  lineHeight: string;\n  fillOpacity: number;\n  fontSize?: number;\n}\n\nexport interface GaugeProps {\n  label: string;\n  value: number;\n  width: number;\n  height: number;\n  min: number;\n  max: number;\n  color: string;\n  backgroundColor: string;\n  topLabelStyle?: LabelStyle;\n  valueLabelStyle?: LabelStyle;\n  minMaxLabelStyle?: LabelStyle;\n}\n\nclass Gauge extends React.PureComponent<GaugeProps, {}> {\n  static defaultProps = {\n    label: 'React SVG Gauge',\n    min: 0,\n    max: 100,\n    value: 0,\n    width: 400,\n    height: 320,\n    color: '#fe0400',\n    backgroundColor: '#edebeb',\n    topLabelStyle: {\n      textAnchor: 'middle',\n      fill: '#999999',\n      stroke: 'none',\n      fontStyle: 'normal',\n      fontVariant: 'normal',\n      fontWeight: 'bold',\n      fontStretch: 'normal',\n      lineHeight: 'normal',\n      fillOpacity: 1,\n    },\n    valueLabelStyle: {\n      textAnchor: 'middle',\n      fill: '#010101',\n      stroke: 'none',\n      fontStyle: 'normal',\n      fontVariant: 'normal',\n      fontWeight: 'bold',\n      fontStretch: 'normal',\n      lineHeight: 'normal',\n      fillOpacity: 1,\n    },\n    minMaxLabelStyle: {\n      textAnchor: 'middle',\n      fill: '#999999',\n      stroke: 'none',\n      fontStyle: 'normal',\n      fontVariant: 'normal',\n      fontWeight: 'normal',\n      fontStretch: 'normal',\n      lineHeight: 'normal',\n      fillOpacity: 1,\n    },\n  };\n\n  oldValue = 0;\n\n  _getSmallerDimension = () => {\n    return this.props.height < this.props.width\n      ? this.props.height\n      : this.props.width;\n  };\n\n  _getPathValues = (value: number) => {\n    const dx = 0;\n    const dy = 0;\n    const smallerDimension = this._getSmallerDimension();\n\n    const getAlpha = (fra: number) => {\n      return (1 - fra) * Math.PI;\n    };\n    let alpha;\n    const numVal = Number(value);\n    const numMin = Number(this.props.min);\n    const numMax = Number(this.props.max);\n    if (numVal > numMax) {\n      alpha = getAlpha(1);\n    } else if (numVal < numMin) {\n      alpha = getAlpha(0);\n    } else if (numMin < 0 && numMax < 0) {\n      if (numVal < numMin) {\n        alpha = getAlpha(0);\n      } else {\n        alpha = getAlpha((-numMin + numVal) / (-numMin + numMax));\n      }\n    } else if (numMin < 0 && numMax >= 0) {\n      if (numVal < numMin) {\n        alpha = getAlpha(0);\n      } else if (numVal < 0) {\n        alpha = getAlpha((-numMin + numVal) / (-numMin + numMax));\n      } else {\n        alpha = getAlpha((-numMin + numVal) / (-numMin + numMax));\n      }\n    } else {\n      alpha = getAlpha(numVal / numMax);\n    }\n\n    const Ro =\n      this.props.height * 1.3 < this.props.width\n        ? this.props.height / 1.4 - this.props.height / 10\n        : this.props.width / 2 - this.props.width / 10;\n    const Ri = Ro - smallerDimension / 5;\n\n    const Cx = this.props.width / 2 + dx;\n    const Cy = this.props.height / 1.25 + dy;\n\n    const Xo = this.props.width / 2 + dx + Ro * Math.cos(alpha);\n    const Yo =\n      this.props.height - (this.props.height - Cy) - Ro * Math.sin(alpha);\n    const Xi = this.props.width / 2 + dx + Ri * Math.cos(alpha);\n    const Yi =\n      this.props.height - (this.props.height - Cy) - Ri * Math.sin(alpha);\n\n    return { alpha, Ro, Ri, Cx, Cy, Xo, Yo, Xi, Yi };\n  };\n\n  _getPath = (value: number) => {\n    const { Ro, Ri, Cx, Cy, Xo, Yo, Xi, Yi } = this._getPathValues(value);\n\n    let path = 'M' + (Cx - Ri) + ',' + Cy + ' ';\n    path += 'L' + (Cx - Ro) + ',' + Cy + ' ';\n    path += 'A' + Ro + ',' + Ro + ' 0 0 1 ' + Xo + ',' + Yo + ' ';\n    path += 'L' + Xi + ',' + Yi + ' ';\n    path += 'A' + Ri + ',' + Ri + ' 0 0 0 ' + (Cx - Ri) + ',' + Cy + ' ';\n    path += 'Z ';\n    return path;\n  };\n\n  componentDidMount() {\n    return this.renderRadialGauge();\n  }\n\n  componentDidUpdate() {\n    return this.renderRadialGauge();\n  }\n\n  componentWillReceiveProps() {\n    this.oldValue = this._getPercentage(\n      Number(this.props.value),\n      this.props.max,\n      this.props.min,\n    );\n    this._getPercentage(this.props.value, this.props.max, this.props.min);\n  }\n\n  renderRadialGauge() {\n    const value = typeof this.props.value === 'object' ? '' : this.props.value;\n    const smallerDimension = this._getSmallerDimension();\n\n    const topLabelStyle = this.props.topLabelStyle.fontSize\n      ? this.props.topLabelStyle\n      : { ...this.props.topLabelStyle, fontSize: smallerDimension / 10 };\n    const valueLabelStyle = this.props.valueLabelStyle.fontSize\n      ? this.props.valueLabelStyle\n      : { ...this.props.valueLabelStyle, fontSize: smallerDimension / 4 };\n    const minMaxLabelStyle = this.props.minMaxLabelStyle.fontSize\n      ? this.props.minMaxLabelStyle\n      : { ...this.props.minMaxLabelStyle, fontSize: smallerDimension / 12 };\n    const { Cx, Ro, Ri, Xo, Cy, Xi } = this._getPathValues(this.props.max);\n\n    interface SVGStyle {\n      width: number;\n      height: number;\n      overflow: string;\n      position: string;\n      left: number;\n      top: number;\n    }\n\n    const svgStyle: SVGStyle = {\n      width: this.props.width,\n      height: this.props.height,\n      overflow: 'hidden',\n      position: 'relative',\n      left: 0,\n      top: 0,\n    };\n\n    // @ts-ignore - el exists on class\n    const el = this.el;\n\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n\n    const svg = d3\n      .select(el)\n      .append('svg')\n      .attr('width', this.props.width)\n      .attr('height', this.props.height)\n      // @ts-ignore\n      .style(svgStyle);\n\n    // Max portion\n    svg\n      .append('path')\n      .attr('fill', this.props.backgroundColor)\n      .attr('stroke', 'none')\n      .attr('d', this._getPath(this.props.max));\n\n    // Label\n    this._renderLabel(\n      svg,\n      this.props.width / 2,\n      this.props.height / 8,\n      topLabelStyle,\n      this.props.label,\n    );\n\n    // Value label\n    this._renderLabel(\n      svg,\n      this.props.width / 2,\n      this.props.height / 5 * 4.2,\n      valueLabelStyle,\n      value,\n    );\n\n    // Min label\n    this._renderLabel(\n      svg,\n      (Cx - Ro + (Cx - Ri)) / 2,\n      Cy + smallerDimension / 10,\n      minMaxLabelStyle,\n      this.props.min,\n    );\n\n    // Max label\n    this._renderLabel(\n      svg,\n      (Xo + Xi) / 2,\n      Cy + smallerDimension / 10,\n      minMaxLabelStyle,\n      this.props.max,\n    );\n\n    this._drawGauge(svg, this.oldValue, this.props.color);\n\n    this._animateGauge(svg, Number(value), this.oldValue);\n\n    svg.transition();\n    return svg;\n  }\n\n  render() {\n    return (\n      <div\n        ref={(el) => {\n          // @ts-ignore - el exists\n          this.el = el;\n        }}\n      />\n    );\n  }\n\n  _renderLabel = (\n    el: Selection<BaseType, {}, null, undefined>,\n    x: number,\n    y: number,\n    style: LabelStyle,\n    text: number | string,\n  ) => {\n    return (\n      el\n        .append('text')\n        .attr('x', x)\n        .attr('y', y)\n        // @ts-ignore\n        .style(style)\n        // These styles have to be added individually because d3 can't seem to recognize inline styles\n        .style('text-anchor', style.textAnchor)\n        .style('font-size', style.fontSize)\n        .style('font-style', style.fontStyle)\n        .style('font-variant', style.fontVariant)\n        .style('font-weight', style.fontWeight)\n        .style('font-stretch', style.fontStretch)\n        .style('line-height', style.lineHeight)\n        .style('fill-opacity', style.fillOpacity)\n        .text(text)\n    );\n  };\n\n  _animateGauge = (\n    el: Selection<BaseType, {}, null, undefined>,\n    value: number,\n    oldValue: number,\n  ) => {\n    // @ts-ignore\n    // tslint:disable-next-line\n    const scope = this;\n    let progress;\n    return (\n      el\n        .transition()\n        .delay(250)\n        // .ease('elastic') // Not sure if we should use this effect\n        .duration(700)\n        .selectAll('.gauge-value')\n        .tween('progress', () => {\n          return function(t: number) {\n            progress = oldValue + t * (value - oldValue);\n            return d3.select(this).attr('d', scope._getPath(progress));\n          };\n        })\n    );\n  };\n\n  _drawGauge = (\n    el: Selection<BaseType, {}, null, undefined>,\n    value: number,\n    color: string,\n  ) => {\n    return el\n      .append('path')\n      .attr('class', 'gauge-value')\n      .attr('fill', color)\n      .attr('stroke', 'none')\n      .attr('d', this._getPath(value));\n  };\n\n  _getPercentage = (dataVal: number, maxVal: number, minVal: number) => {\n    if (dataVal && !isNaN(dataVal)) {\n      const val = Number(dataVal);\n      const max = Number(maxVal);\n      const min = Number(minVal);\n      if (val > max) {\n        return 100;\n      }\n      if (val < min) {\n        return 0;\n      }\n      if (min < 0 && max < 0) {\n        if (val < min) {\n          return 0;\n        } else {\n          return (-min + val) / (-min + max) * 100;\n        }\n      }\n      if (min < 0 && max >= 0) {\n        if (val < min) {\n          return 0;\n        } else if (val < 0) {\n          return (-min + val) / (-min + max) * 100;\n        } else {\n          return (-min + val) / (-min + max) * 100;\n        }\n      }\n      return val / max * 100;\n    }\n    return 0;\n  };\n}\n\nexport default Gauge;\n\n\n\n// WEBPACK FOOTER //\n// ./app/plugins/widgets/RadialGaugeWidget/Gauge.tsx","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3/d3.js\n// module id = ./node_modules/d3/d3.js\n// module chunks = 33 34"],"sourceRoot":""}